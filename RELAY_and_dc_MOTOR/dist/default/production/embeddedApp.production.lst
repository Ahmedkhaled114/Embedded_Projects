

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 01 16:30:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 05/05/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F46K20 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  00F980                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _port_register
    71  00F980  80                 	db	128
    72  00F981  0F                 	db	15
    73  00F982  81                 	db	129
    74  00F983  0F                 	db	15
    75  00F984  82                 	db	130
    76  00F985  0F                 	db	15
    77  00F986  83                 	db	131
    78  00F987  0F                 	db	15
    79  00F988  84                 	db	132
    80  00F989  0F                 	db	15
    81                           
    82                           ;initializer for _lat_register
    83  00F98A  89                 	db	137
    84  00F98B  0F                 	db	15
    85  00F98C  8A                 	db	138
    86  00F98D  0F                 	db	15
    87  00F98E  8B                 	db	139
    88  00F98F  0F                 	db	15
    89  00F990  8C                 	db	140
    90  00F991  0F                 	db	15
    91  00F992  8D                 	db	141
    92  00F993  0F                 	db	15
    93                           
    94                           ;initializer for _tris_register
    95  00F994  92                 	db	146
    96  00F995  0F                 	db	15
    97  00F996  93                 	db	147
    98  00F997  0F                 	db	15
    99  00F998  94                 	db	148
   100  00F999  0F                 	db	15
   101  00F99A  95                 	db	149
   102  00F99B  0F                 	db	15
   103  00F99C  96                 	db	150
   104  00F99D  0F                 	db	15
   105                           
   106                           ;initializer for _dc_motor1_2
   107  00F99E  A2                 	db	162
   108  00F99F  B2                 	db	178
   109                           
   110                           ;initializer for _dc_motor1_1
   111  00F9A0  82                 	db	130
   112  00F9A1  92                 	db	146
   113                           
   114                           ;initializer for _btn2
   115  00F9A2  13                 	db	19
   116                           
   117                           ;initializer for _btn1
   118  00F9A3  03                 	db	3
   119  0000                     _PORTE	set	3972
   120  0000                     _PORTD	set	3971
   121  0000                     _PORTC	set	3970
   122  0000                     _PORTB	set	3969
   123  0000                     _PORTA	set	3968
   124  0000                     _LATE	set	3981
   125  0000                     _LATD	set	3980
   126  0000                     _LATC	set	3979
   127  0000                     _LATB	set	3978
   128  0000                     _LATA	set	3977
   129  0000                     _TRISE	set	3990
   130  0000                     _TRISD	set	3989
   131  0000                     _TRISC	set	3988
   132  0000                     _TRISB	set	3987
   133  0000                     _TRISA	set	3986
   134                           
   135                           ; #config settings
   136                           
   137                           	psect	cinit
   138  00F9A4                     __pcinit:
   139                           	callstack 0
   140  00F9A4                     start_initialization:
   141                           	callstack 0
   142  00F9A4                     __initialization:
   143                           	callstack 0
   144                           
   145                           ; Initialize objects allocated to COMRAM (36 bytes)
   146                           ; load TBLPTR registers with __pidataCOMRAM
   147  00F9A4  0E80               	movlw	low __pidataCOMRAM
   148  00F9A6  6EF6               	movwf	tblptrl,c
   149  00F9A8  0EF9               	movlw	high __pidataCOMRAM
   150  00F9AA  6EF7               	movwf	tblptrh,c
   151  00F9AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   152  00F9AE  6EF8               	movwf	tblptru,c
   153  00F9B0  EE00  F001         	lfsr	0,__pdataCOMRAM
   154  00F9B4  EE10 F024          	lfsr	1,36
   155  00F9B8                     copy_data0:
   156  00F9B8  0009               	tblrd		*+
   157  00F9BA  CFF5 FFEE          	movff	tablat,postinc0
   158  00F9BE  50E5               	movf	postdec1,w,c
   159  00F9C0  50E1               	movf	fsr1l,w,c
   160  00F9C2  E1FA               	bnz	copy_data0
   161                           
   162                           ; Clear objects allocated to COMRAM (2 bytes)
   163  00F9C4  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   164  00F9C6  6A35               	clrf	__pbssCOMRAM& (0+255),c
   165  00F9C8                     end_of_initialization:
   166                           	callstack 0
   167  00F9C8                     __end_of__initialization:
   168                           	callstack 0
   169  00F9C8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170  00F9CA  6EF8               	movwf	tblptru,c
   171  00F9CC  0100               	movlb	0
   172  00F9CE  EFDE  F07E         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssCOMRAM
   175  000035                     __pbssCOMRAM:
   176                           	callstack 0
   177  000035                     _btn2_status:
   178                           	callstack 0
   179  000035                     	ds	1
   180  000036                     _btn1_status:
   181                           	callstack 0
   182  000036                     	ds	1
   183                           
   184                           	psect	dataCOMRAM
   185  000001                     __pdataCOMRAM:
   186                           	callstack 0
   187  000001                     _port_register:
   188                           	callstack 0
   189  000001                     	ds	10
   190  00000B                     _lat_register:
   191                           	callstack 0
   192  00000B                     	ds	10
   193  000015                     _tris_register:
   194                           	callstack 0
   195  000015                     	ds	10
   196  00001F                     _dc_motor1_2:
   197                           	callstack 0
   198  00001F                     	ds	2
   199  000021                     _dc_motor1_1:
   200                           	callstack 0
   201  000021                     	ds	2
   202  000023                     _btn2:
   203                           	callstack 0
   204  000023                     	ds	1
   205  000024                     _btn1:
   206                           	callstack 0
   207  000024                     	ds	1
   208                           
   209                           	psect	cstackCOMRAM
   210  000025                     __pcstackCOMRAM:
   211                           	callstack 0
   212  000025                     gpio_pin_direction_initialize@pin:
   213                           	callstack 0
   214  000025                     gpio_pin_write_value@pin:
   215                           	callstack 0
   216  000025                     gpio_pin_read_value@pin:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x0
   220  000025                     	ds	1
   221  000026                     gpio_pin_direction_initialize@direction:
   222                           	callstack 0
   223  000026                     gpio_pin_write_value@logic:
   224                           	callstack 0
   225  000026                     gpio_pin_read_value@logic:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x1
   229  000026                     	ds	1
   230  000027                     ??_gpio_pin_direction_initialize:
   231  000027                     ??_gpio_pin_write_value:
   232                           
   233                           ; 1 bytes @ 0x2
   234  000027                     	ds	1
   235  000028                     ??_gpio_pin_read_value:
   236                           
   237                           ; 1 bytes @ 0x3
   238  000028                     	ds	5
   239  00002D                     gpio_pin_direction_initialize@port:
   240                           	callstack 0
   241  00002D                     gpio_pin_write_value@port:
   242                           	callstack 0
   243  00002D                     gpio_pin_read_value@port:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x8
   247  00002D                     	ds	1
   248  00002E                     button_initialize@btn:
   249                           	callstack 0
   250  00002E                     button_get_status@btn:
   251                           	callstack 0
   252  00002E                     relay_initialize@relay:
   253                           	callstack 0
   254  00002E                     relay_turn_on@relay:
   255                           	callstack 0
   256  00002E                     relay_turn_off@relay:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x9
   260  00002E                     	ds	2
   261  000030                     ??_relay_initialize:
   262  000030                     ??_relay_turn_on:
   263  000030                     ??_relay_turn_off:
   264  000030                     ??_button_initialize:
   265  000030                     button_get_status@btn_status:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0xB
   269  000030                     	ds	2
   270  000032                     ??_button_get_status:
   271  000032                     dc_motor_initialize@dc_motor:
   272                           	callstack 0
   273  000032                     dc_motor_rotate_right@dc_motor:
   274                           	callstack 0
   275  000032                     dc_motor_rotate_left@dc_motor:
   276                           	callstack 0
   277  000032                     dc_motor_stop@dc_motor:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0xD
   281  000032                     	ds	2
   282  000034                     
   283                           ; 1 bytes @ 0xF
   284  000034                     	ds	1
   285  000035                     
   286                           ; 1 bytes @ 0x10
   287 ;;
   288 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   289 ;;
   290 ;; *************** function _main *****************
   291 ;; Defined at:
   292 ;;		line 48 in file "application.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  2  260[None  ] int 
   299 ;; Registers used:
   300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;Total ram usage:        0 bytes
   311 ;; Hardware stack levels required when called:    4
   312 ;; This function calls:
   313 ;;		_button_get_status
   314 ;;		_button_initialize
   315 ;;		_dc_motor_initialize
   316 ;;		_robot_move_backward
   317 ;;		_robot_move_forward
   318 ;;		_robot_move_stop
   319 ;; This function is called by:
   320 ;;		Startup code after reset
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text0
   325  00FDBC                     __ptext0:
   326                           	callstack 0
   327  00FDBC                     _main:
   328                           	callstack 27
   329  00FDBC                     
   330                           ;application.c: 51:     dc_motor_initialize(&dc_motor1_1);
   331  00FDBC  0E21               	movlw	low _dc_motor1_1
   332  00FDBE  6E32               	movwf	dc_motor_initialize@dc_motor^0,c
   333  00FDC0  0E00               	movlw	high _dc_motor1_1
   334  00FDC2  6E33               	movwf	(dc_motor_initialize@dc_motor+1)^0,c
   335  00FDC4  ECE9  F07C         	call	_dc_motor_initialize	;wreg free
   336                           
   337                           ;application.c: 52:     dc_motor_initialize(&dc_motor1_2);
   338  00FDC8  0E1F               	movlw	low _dc_motor1_2
   339  00FDCA  6E32               	movwf	dc_motor_initialize@dc_motor^0,c
   340  00FDCC  0E00               	movlw	high _dc_motor1_2
   341  00FDCE  6E33               	movwf	(dc_motor_initialize@dc_motor+1)^0,c
   342  00FDD0  ECE9  F07C         	call	_dc_motor_initialize	;wreg free
   343                           
   344                           ;application.c: 53:     button_initialize(&btn1);
   345  00FDD4  0E24               	movlw	low _btn1
   346  00FDD6  6E2E               	movwf	button_initialize@btn^0,c
   347  00FDD8  0E00               	movlw	high _btn1
   348  00FDDA  6E2F               	movwf	(button_initialize@btn+1)^0,c
   349  00FDDC  EC89  F07D         	call	_button_initialize	;wreg free
   350                           
   351                           ;application.c: 54:     button_initialize(&btn2);
   352  00FDE0  0E23               	movlw	low _btn2
   353  00FDE2  6E2E               	movwf	button_initialize@btn^0,c
   354  00FDE4  0E00               	movlw	high _btn2
   355  00FDE6  6E2F               	movwf	(button_initialize@btn+1)^0,c
   356  00FDE8  EC89  F07D         	call	_button_initialize	;wreg free
   357  00FDEC                     l261:
   358                           
   359                           ;application.c: 65:         button_get_status(&btn1, &btn1_status);
   360  00FDEC  0E24               	movlw	low _btn1
   361  00FDEE  6E2E               	movwf	button_get_status@btn^0,c
   362  00FDF0  0E00               	movlw	high _btn1
   363  00FDF2  6E2F               	movwf	(button_get_status@btn+1)^0,c
   364  00FDF4  0E36               	movlw	low _btn1_status
   365  00FDF6  6E30               	movwf	button_get_status@btn_status^0,c
   366  00FDF8  0E00               	movlw	high _btn1_status
   367  00FDFA  6E31               	movwf	(button_get_status@btn_status+1)^0,c
   368  00FDFC  EC90  F07E         	call	_button_get_status	;wreg free
   369                           
   370                           ;application.c: 66:         button_get_status(&btn2, &btn2_status);
   371  00FE00  0E23               	movlw	low _btn2
   372  00FE02  6E2E               	movwf	button_get_status@btn^0,c
   373  00FE04  0E00               	movlw	high _btn2
   374  00FE06  6E2F               	movwf	(button_get_status@btn+1)^0,c
   375  00FE08  0E35               	movlw	low _btn2_status
   376  00FE0A  6E30               	movwf	button_get_status@btn_status^0,c
   377  00FE0C  0E00               	movlw	high _btn2_status
   378  00FE0E  6E31               	movwf	(button_get_status@btn_status+1)^0,c
   379  00FE10  EC90  F07E         	call	_button_get_status	;wreg free
   380  00FE14                     
   381                           ;application.c: 67:         if(btn1_status == BUTTON_PRESSED && btn2_status == BUTTON_NO
      +                          T_PRESSED){
   382  00FE14  0436               	decf	_btn1_status^0,w,c
   383  00FE16  A4D8               	btfss	status,2,c
   384  00FE18  EF10  F07F         	goto	u941
   385  00FE1C  EF12  F07F         	goto	u940
   386  00FE20                     u941:
   387  00FE20  EF1E  F07F         	goto	l1661
   388  00FE24                     u940:
   389  00FE24  5035               	movf	_btn2_status^0,w,c
   390  00FE26  A4D8               	btfss	status,2,c
   391  00FE28  EF18  F07F         	goto	u951
   392  00FE2C  EF1A  F07F         	goto	u950
   393  00FE30                     u951:
   394  00FE30  EF1E  F07F         	goto	l1661
   395  00FE34                     u950:
   396  00FE34                     
   397                           ;application.c: 68:             robot_move_forward();
   398  00FE34  ECA6  F07C         	call	_robot_move_forward	;wreg free
   399                           
   400                           ;application.c: 69:         }
   401  00FE38  EFF6  F07E         	goto	l261
   402  00FE3C                     l1661:
   403  00FE3C  0435               	decf	_btn2_status^0,w,c
   404  00FE3E  A4D8               	btfss	status,2,c
   405  00FE40  EF24  F07F         	goto	u961
   406  00FE44  EF26  F07F         	goto	u960
   407  00FE48                     u961:
   408  00FE48  EF32  F07F         	goto	l1667
   409  00FE4C                     u960:
   410  00FE4C  5036               	movf	_btn1_status^0,w,c
   411  00FE4E  A4D8               	btfss	status,2,c
   412  00FE50  EF2C  F07F         	goto	u971
   413  00FE54  EF2E  F07F         	goto	u970
   414  00FE58                     u971:
   415  00FE58  EF32  F07F         	goto	l1667
   416  00FE5C                     u970:
   417  00FE5C                     
   418                           ;application.c: 71:             robot_move_backward();
   419  00FE5C  EC99  F07C         	call	_robot_move_backward	;wreg free
   420                           
   421                           ;application.c: 72:         }
   422  00FE60  EFF6  F07E         	goto	l261
   423  00FE64                     l1667:
   424                           
   425                           ;application.c: 74:             robot_move_stop();
   426  00FE64  ECB3  F07C         	call	_robot_move_stop	;wreg free
   427  00FE68  EFF6  F07E         	goto	l261
   428  00FE6C  EF00  F000         	goto	start
   429  00FE70                     __end_of_main:
   430                           	callstack 0
   431                           
   432 ;; *************** function _robot_move_stop *****************
   433 ;; Defined at:
   434 ;;		line 42 in file "application.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;Total ram usage:        0 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; Hardware stack levels required when called:    3
   455 ;; This function calls:
   456 ;;		_dc_motor_stop
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text1
   463  00F966                     __ptext1:
   464                           	callstack 0
   465  00F966                     _robot_move_stop:
   466                           	callstack 27
   467  00F966                     
   468                           ;application.c: 43:     dc_motor_stop(&dc_motor1_1);
   469  00F966  0E21               	movlw	low _dc_motor1_1
   470  00F968  6E32               	movwf	dc_motor_stop@dc_motor^0,c
   471  00F96A  0E00               	movlw	high _dc_motor1_1
   472  00F96C  6E33               	movwf	(dc_motor_stop@dc_motor+1)^0,c
   473  00F96E  EC37  F07D         	call	_dc_motor_stop	;wreg free
   474                           
   475                           ;application.c: 44:     dc_motor_stop(&dc_motor1_2);
   476  00F972  0E1F               	movlw	low _dc_motor1_2
   477  00F974  6E32               	movwf	dc_motor_stop@dc_motor^0,c
   478  00F976  0E00               	movlw	high _dc_motor1_2
   479  00F978  6E33               	movwf	(dc_motor_stop@dc_motor+1)^0,c
   480  00F97A  EC37  F07D         	call	_dc_motor_stop	;wreg free
   481  00F97E  0012               	return		;funcret
   482  00F980                     __end_of_robot_move_stop:
   483                           	callstack 0
   484                           
   485 ;; *************** function _dc_motor_stop *****************
   486 ;; Defined at:
   487 ;;		line 78 in file "ecu/dc_motor/ecu_dc_motor.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;  dc_motor        2   13[COMRAM] PTR struct .
   490 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  ret             1    0        enum E329
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      enum E329
   495 ;; Registers used:
   496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;Total ram usage:        3 bytes
   507 ;; Hardware stack levels used:    1
   508 ;; Hardware stack levels required when called:    2
   509 ;; This function calls:
   510 ;;		_relay_turn_off
   511 ;; This function is called by:
   512 ;;		_robot_move_stop
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text2
   517  00FA6E                     __ptext2:
   518                           	callstack 0
   519  00FA6E                     _dc_motor_stop:
   520                           	callstack 27
   521  00FA6E                     
   522                           ;ecu/dc_motor/ecu_dc_motor.c: 80:     if (dc_motor == ((void*)0)){
   523  00FA6E  5032               	movf	dc_motor_stop@dc_motor^0,w,c
   524  00FA70  1033               	iorwf	(dc_motor_stop@dc_motor+1)^0,w,c
   525  00FA72  A4D8               	btfss	status,2,c
   526  00FA74  EF3E  F07D         	goto	u771
   527  00FA78  EF40  F07D         	goto	u770
   528  00FA7C                     u771:
   529  00FA7C  EF42  F07D         	goto	l1541
   530  00FA80                     u770:
   531  00FA80  EF50  F07D         	goto	l43
   532  00FA84                     l1541:
   533                           
   534                           ;ecu/dc_motor/ecu_dc_motor.c: 85:         relay_turn_off(& (dc_motor->relay1));
   535  00FA84  C032  F02E         	movff	dc_motor_stop@dc_motor,relay_turn_off@relay
   536  00FA88  C033  F02F         	movff	dc_motor_stop@dc_motor+1,relay_turn_off@relay+1
   537  00FA8C  ECC4  F07D         	call	_relay_turn_off	;wreg free
   538                           
   539                           ;ecu/dc_motor/ecu_dc_motor.c: 86:         relay_turn_off(& (dc_motor->relay2));
   540  00FA90  0E01               	movlw	1
   541  00FA92  2432               	addwf	dc_motor_stop@dc_motor^0,w,c
   542  00FA94  6E2E               	movwf	relay_turn_off@relay^0,c
   543  00FA96  0E00               	movlw	0
   544  00FA98  2033               	addwfc	(dc_motor_stop@dc_motor+1)^0,w,c
   545  00FA9A  6E2F               	movwf	(relay_turn_off@relay+1)^0,c
   546  00FA9C  ECC4  F07D         	call	_relay_turn_off	;wreg free
   547  00FAA0                     l43:
   548  00FAA0  0012               	return		;funcret
   549  00FAA2                     __end_of_dc_motor_stop:
   550                           	callstack 0
   551                           
   552 ;; *************** function _robot_move_forward *****************
   553 ;; Defined at:
   554 ;;		line 32 in file "application.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    3
   575 ;; This function calls:
   576 ;;		_dc_motor_rotate_right
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text3
   583  00F94C                     __ptext3:
   584                           	callstack 0
   585  00F94C                     _robot_move_forward:
   586                           	callstack 27
   587  00F94C                     
   588                           ;application.c: 33:     dc_motor_rotate_right(&dc_motor1_1);
   589  00F94C  0E21               	movlw	low _dc_motor1_1
   590  00F94E  6E32               	movwf	dc_motor_rotate_right@dc_motor^0,c
   591  00F950  0E00               	movlw	high _dc_motor1_1
   592  00F952  6E33               	movwf	(dc_motor_rotate_right@dc_motor+1)^0,c
   593  00F954  EC1D  F07D         	call	_dc_motor_rotate_right	;wreg free
   594                           
   595                           ;application.c: 34:     dc_motor_rotate_right(&dc_motor1_2);
   596  00F958  0E1F               	movlw	low _dc_motor1_2
   597  00F95A  6E32               	movwf	dc_motor_rotate_right@dc_motor^0,c
   598  00F95C  0E00               	movlw	high _dc_motor1_2
   599  00F95E  6E33               	movwf	(dc_motor_rotate_right@dc_motor+1)^0,c
   600  00F960  EC1D  F07D         	call	_dc_motor_rotate_right	;wreg free
   601  00F964  0012               	return		;funcret
   602  00F966                     __end_of_robot_move_forward:
   603                           	callstack 0
   604                           
   605 ;; *************** function _dc_motor_rotate_right *****************
   606 ;; Defined at:
   607 ;;		line 37 in file "ecu/dc_motor/ecu_dc_motor.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  dc_motor        2   13[COMRAM] PTR struct .
   610 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  ret             1    0        enum E329
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      enum E329
   615 ;; Registers used:
   616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;Total ram usage:        3 bytes
   627 ;; Hardware stack levels used:    1
   628 ;; Hardware stack levels required when called:    2
   629 ;; This function calls:
   630 ;;		_relay_turn_off
   631 ;;		_relay_turn_on
   632 ;; This function is called by:
   633 ;;		_robot_move_forward
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text4
   638  00FA3A                     __ptext4:
   639                           	callstack 0
   640  00FA3A                     _dc_motor_rotate_right:
   641                           	callstack 27
   642  00FA3A                     
   643                           ;ecu/dc_motor/ecu_dc_motor.c: 39:     if (dc_motor == ((void*)0)){
   644  00FA3A  5032               	movf	dc_motor_rotate_right@dc_motor^0,w,c
   645  00FA3C  1033               	iorwf	(dc_motor_rotate_right@dc_motor+1)^0,w,c
   646  00FA3E  A4D8               	btfss	status,2,c
   647  00FA40  EF24  F07D         	goto	u751
   648  00FA44  EF26  F07D         	goto	u750
   649  00FA48                     u751:
   650  00FA48  EF28  F07D         	goto	l1513
   651  00FA4C                     u750:
   652  00FA4C  EF36  F07D         	goto	l33
   653  00FA50                     l1513:
   654                           
   655                           ;ecu/dc_motor/ecu_dc_motor.c: 44:         relay_turn_on (& (dc_motor->relay1));
   656  00FA50  C032  F02E         	movff	dc_motor_rotate_right@dc_motor,relay_turn_on@relay
   657  00FA54  C033  F02F         	movff	dc_motor_rotate_right@dc_motor+1,relay_turn_on@relay+1
   658  00FA58  EC04  F07E         	call	_relay_turn_on	;wreg free
   659                           
   660                           ;ecu/dc_motor/ecu_dc_motor.c: 45:         relay_turn_off(& (dc_motor->relay2));
   661  00FA5C  0E01               	movlw	1
   662  00FA5E  2432               	addwf	dc_motor_rotate_right@dc_motor^0,w,c
   663  00FA60  6E2E               	movwf	relay_turn_off@relay^0,c
   664  00FA62  0E00               	movlw	0
   665  00FA64  2033               	addwfc	(dc_motor_rotate_right@dc_motor+1)^0,w,c
   666  00FA66  6E2F               	movwf	(relay_turn_off@relay+1)^0,c
   667  00FA68  ECC4  F07D         	call	_relay_turn_off	;wreg free
   668  00FA6C                     l33:
   669  00FA6C  0012               	return		;funcret
   670  00FA6E                     __end_of_dc_motor_rotate_right:
   671                           	callstack 0
   672                           
   673 ;; *************** function _robot_move_backward *****************
   674 ;; Defined at:
   675 ;;		line 37 in file "application.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    3
   696 ;; This function calls:
   697 ;;		_dc_motor_rotate_left
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text5
   704  00F932                     __ptext5:
   705                           	callstack 0
   706  00F932                     _robot_move_backward:
   707                           	callstack 27
   708  00F932                     
   709                           ;application.c: 38:     dc_motor_rotate_left(&dc_motor1_1);
   710  00F932  0E21               	movlw	low _dc_motor1_1
   711  00F934  6E32               	movwf	dc_motor_rotate_left@dc_motor^0,c
   712  00F936  0E00               	movlw	high _dc_motor1_1
   713  00F938  6E33               	movwf	(dc_motor_rotate_left@dc_motor+1)^0,c
   714  00F93A  EC03  F07D         	call	_dc_motor_rotate_left	;wreg free
   715                           
   716                           ;application.c: 39:     dc_motor_rotate_left(&dc_motor1_2);
   717  00F93E  0E1F               	movlw	low _dc_motor1_2
   718  00F940  6E32               	movwf	dc_motor_rotate_left@dc_motor^0,c
   719  00F942  0E00               	movlw	high _dc_motor1_2
   720  00F944  6E33               	movwf	(dc_motor_rotate_left@dc_motor+1)^0,c
   721  00F946  EC03  F07D         	call	_dc_motor_rotate_left	;wreg free
   722  00F94A  0012               	return		;funcret
   723  00F94C                     __end_of_robot_move_backward:
   724                           	callstack 0
   725                           
   726 ;; *************** function _dc_motor_rotate_left *****************
   727 ;; Defined at:
   728 ;;		line 57 in file "ecu/dc_motor/ecu_dc_motor.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  dc_motor        2   13[COMRAM] PTR struct .
   731 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  ret             1    0        enum E329
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      enum E329
   736 ;; Registers used:
   737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;Total ram usage:        3 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; Hardware stack levels required when called:    2
   750 ;; This function calls:
   751 ;;		_relay_turn_off
   752 ;;		_relay_turn_on
   753 ;; This function is called by:
   754 ;;		_robot_move_backward
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text6
   759  00FA06                     __ptext6:
   760                           	callstack 0
   761  00FA06                     _dc_motor_rotate_left:
   762                           	callstack 27
   763  00FA06                     
   764                           ;ecu/dc_motor/ecu_dc_motor.c: 59:     if (dc_motor == ((void*)0)){
   765  00FA06  5032               	movf	dc_motor_rotate_left@dc_motor^0,w,c
   766  00FA08  1033               	iorwf	(dc_motor_rotate_left@dc_motor+1)^0,w,c
   767  00FA0A  A4D8               	btfss	status,2,c
   768  00FA0C  EF0A  F07D         	goto	u761
   769  00FA10  EF0C  F07D         	goto	u760
   770  00FA14                     u761:
   771  00FA14  EF0E  F07D         	goto	l1527
   772  00FA18                     u760:
   773  00FA18  EF1C  F07D         	goto	l38
   774  00FA1C                     l1527:
   775                           
   776                           ;ecu/dc_motor/ecu_dc_motor.c: 64:         relay_turn_off(& (dc_motor->relay1));
   777  00FA1C  C032  F02E         	movff	dc_motor_rotate_left@dc_motor,relay_turn_off@relay
   778  00FA20  C033  F02F         	movff	dc_motor_rotate_left@dc_motor+1,relay_turn_off@relay+1
   779  00FA24  ECC4  F07D         	call	_relay_turn_off	;wreg free
   780                           
   781                           ;ecu/dc_motor/ecu_dc_motor.c: 65:         relay_turn_on (& (dc_motor->relay2));
   782  00FA28  0E01               	movlw	1
   783  00FA2A  2432               	addwf	dc_motor_rotate_left@dc_motor^0,w,c
   784  00FA2C  6E2E               	movwf	relay_turn_on@relay^0,c
   785  00FA2E  0E00               	movlw	0
   786  00FA30  2033               	addwfc	(dc_motor_rotate_left@dc_motor+1)^0,w,c
   787  00FA32  6E2F               	movwf	(relay_turn_on@relay+1)^0,c
   788  00FA34  EC04  F07E         	call	_relay_turn_on	;wreg free
   789  00FA38                     l38:
   790  00FA38  0012               	return		;funcret
   791  00FA3A                     __end_of_dc_motor_rotate_left:
   792                           	callstack 0
   793                           
   794 ;; *************** function _relay_turn_on *****************
   795 ;; Defined at:
   796 ;;		line 41 in file "ecu/relay/ecu_relay.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  relay           2    9[COMRAM] PTR struct .
   799 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  ret             1    0        enum E329
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      enum E329
   804 ;; Registers used:
   805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;Total ram usage:        4 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    1
   818 ;; This function calls:
   819 ;;		_gpio_pin_write_value
   820 ;; This function is called by:
   821 ;;		_dc_motor_rotate_right
   822 ;;		_dc_motor_rotate_left
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text7
   827  00FC08                     __ptext7:
   828                           	callstack 0
   829  00FC08                     _relay_turn_on:
   830                           	callstack 27
   831  00FC08                     
   832                           ;ecu/relay/ecu_relay.c: 44:     if ( (((void*)0) == relay ) || (relay ->port_name > 5U -
      +                          1 )
   833  00FC08  502E               	movf	relay_turn_on@relay^0,w,c
   834  00FC0A  102F               	iorwf	(relay_turn_on@relay+1)^0,w,c
   835  00FC0C  B4D8               	btfsc	status,2,c
   836  00FC0E  EF0B  F07E         	goto	u631
   837  00FC12  EF0D  F07E         	goto	u630
   838  00FC16                     u631:
   839  00FC16  EF43  F07E         	goto	l95
   840  00FC1A                     u630:
   841  00FC1A  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   842  00FC1E  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   843  00FC22  50DF               	movf	indf2,w,c
   844  00FC24  0B0F               	andlw	15
   845  00FC26  6E30               	movwf	??_relay_turn_on^0,c
   846  00FC28  0E05               	movlw	5
   847  00FC2A  6030               	cpfslt	??_relay_turn_on^0,c
   848  00FC2C  EF1A  F07E         	goto	u641
   849  00FC30  EF1C  F07E         	goto	u640
   850  00FC34                     u641:
   851  00FC34  EF43  F07E         	goto	l95
   852  00FC38                     u640:
   853  00FC38  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   854  00FC3C  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   855  00FC40  38DF               	swapf	indf2,w,c
   856  00FC42  0B07               	andlw	7
   857  00FC44  6E30               	movwf	??_relay_turn_on^0,c
   858  00FC46  0E07               	movlw	7
   859  00FC48  6430               	cpfsgt	??_relay_turn_on^0,c
   860  00FC4A  EF29  F07E         	goto	u651
   861  00FC4E  EF2B  F07E         	goto	u650
   862  00FC52                     u651:
   863  00FC52  EF2D  F07E         	goto	l1449
   864  00FC56                     u650:
   865  00FC56  EF43  F07E         	goto	l95
   866  00FC5A                     l1449:
   867                           
   868                           ;ecu/relay/ecu_relay.c: 51:         gpio_pin_write_value(relay->port_name , relay->pin ,
      +                           HIGH );
   869  00FC5A  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   870  00FC5E  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   871  00FC62  38DF               	swapf	indf2,w,c
   872  00FC64  0B07               	andlw	7
   873  00FC66  6E25               	movwf	gpio_pin_write_value@pin^0,c
   874  00FC68  0E01               	movlw	1
   875  00FC6A  6E26               	movwf	gpio_pin_write_value@logic^0,c
   876  00FC6C  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   877  00FC70  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   878  00FC74  50DF               	movf	indf2,w,c
   879  00FC76  0B0F               	andlw	15
   880  00FC78  EC9C  F07F         	call	_gpio_pin_write_value
   881  00FC7C                     
   882                           ;ecu/relay/ecu_relay.c: 52:         relay->relay_status = RELAY_ON;
   883  00FC7C  C02E  FFD9         	movff	relay_turn_on@relay,fsr2l
   884  00FC80  C02F  FFDA         	movff	relay_turn_on@relay+1,fsr2h
   885  00FC84  9EDF               	bcf	indf2,7,c
   886  00FC86                     l95:
   887  00FC86  0012               	return		;funcret
   888  00FC88                     __end_of_relay_turn_on:
   889                           	callstack 0
   890                           
   891 ;; *************** function _relay_turn_off *****************
   892 ;; Defined at:
   893 ;;		line 65 in file "ecu/relay/ecu_relay.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  relay           2    9[COMRAM] PTR struct .
   896 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  ret             1    0        enum E329
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      enum E329
   901 ;; Registers used:
   902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;Total ram usage:        4 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		_gpio_pin_write_value
   917 ;; This function is called by:
   918 ;;		_dc_motor_rotate_right
   919 ;;		_dc_motor_rotate_left
   920 ;;		_dc_motor_stop
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text8
   925  00FB88                     __ptext8:
   926                           	callstack 0
   927  00FB88                     _relay_turn_off:
   928                           	callstack 27
   929  00FB88                     
   930                           ;ecu/relay/ecu_relay.c: 68:     if ( (((void*)0) == relay ) || (relay ->port_name > 5U -
      +                          1 )
   931  00FB88  502E               	movf	relay_turn_off@relay^0,w,c
   932  00FB8A  102F               	iorwf	(relay_turn_off@relay+1)^0,w,c
   933  00FB8C  B4D8               	btfsc	status,2,c
   934  00FB8E  EFCB  F07D         	goto	u661
   935  00FB92  EFCD  F07D         	goto	u660
   936  00FB96                     u661:
   937  00FB96  EF03  F07E         	goto	l102
   938  00FB9A                     u660:
   939  00FB9A  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   940  00FB9E  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   941  00FBA2  50DF               	movf	indf2,w,c
   942  00FBA4  0B0F               	andlw	15
   943  00FBA6  6E30               	movwf	??_relay_turn_off^0,c
   944  00FBA8  0E05               	movlw	5
   945  00FBAA  6030               	cpfslt	??_relay_turn_off^0,c
   946  00FBAC  EFDA  F07D         	goto	u671
   947  00FBB0  EFDC  F07D         	goto	u670
   948  00FBB4                     u671:
   949  00FBB4  EF03  F07E         	goto	l102
   950  00FBB8                     u670:
   951  00FBB8  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   952  00FBBC  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   953  00FBC0  38DF               	swapf	indf2,w,c
   954  00FBC2  0B07               	andlw	7
   955  00FBC4  6E30               	movwf	??_relay_turn_off^0,c
   956  00FBC6  0E07               	movlw	7
   957  00FBC8  6430               	cpfsgt	??_relay_turn_off^0,c
   958  00FBCA  EFE9  F07D         	goto	u681
   959  00FBCE  EFEB  F07D         	goto	u680
   960  00FBD2                     u681:
   961  00FBD2  EFED  F07D         	goto	l1467
   962  00FBD6                     u680:
   963  00FBD6  EF03  F07E         	goto	l102
   964  00FBDA                     l1467:
   965                           
   966                           ;ecu/relay/ecu_relay.c: 75:         gpio_pin_write_value(relay->port_name , relay->pin ,
      +                           LOW );
   967  00FBDA  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   968  00FBDE  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   969  00FBE2  38DF               	swapf	indf2,w,c
   970  00FBE4  0B07               	andlw	7
   971  00FBE6  6E25               	movwf	gpio_pin_write_value@pin^0,c
   972  00FBE8  0E00               	movlw	0
   973  00FBEA  6E26               	movwf	gpio_pin_write_value@logic^0,c
   974  00FBEC  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   975  00FBF0  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   976  00FBF4  50DF               	movf	indf2,w,c
   977  00FBF6  0B0F               	andlw	15
   978  00FBF8  EC9C  F07F         	call	_gpio_pin_write_value
   979  00FBFC                     
   980                           ;ecu/relay/ecu_relay.c: 76:         relay->relay_status = RELAY_OFF;
   981  00FBFC  C02E  FFD9         	movff	relay_turn_off@relay,fsr2l
   982  00FC00  C02F  FFDA         	movff	relay_turn_off@relay+1,fsr2h
   983  00FC04  8EDF               	bsf	indf2,7,c
   984  00FC06                     l102:
   985  00FC06  0012               	return		;funcret
   986  00FC08                     __end_of_relay_turn_off:
   987                           	callstack 0
   988                           
   989 ;; *************** function _dc_motor_initialize *****************
   990 ;; Defined at:
   991 ;;		line 18 in file "ecu/dc_motor/ecu_dc_motor.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  dc_motor        2   13[COMRAM] PTR struct .
   994 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  ret             1    0        enum E329
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      enum E329
   999 ;; Registers used:
  1000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;Total ram usage:        3 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    2
  1013 ;; This function calls:
  1014 ;;		_relay_initialize
  1015 ;; This function is called by:
  1016 ;;		_main
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text9
  1021  00F9D2                     __ptext9:
  1022                           	callstack 0
  1023  00F9D2                     _dc_motor_initialize:
  1024                           	callstack 28
  1025  00F9D2                     
  1026                           ;ecu/dc_motor/ecu_dc_motor.c: 20:     if (dc_motor == ((void*)0)){
  1027  00F9D2  5032               	movf	dc_motor_initialize@dc_motor^0,w,c
  1028  00F9D4  1033               	iorwf	(dc_motor_initialize@dc_motor+1)^0,w,c
  1029  00F9D6  A4D8               	btfss	status,2,c
  1030  00F9D8  EFF0  F07C         	goto	u841
  1031  00F9DC  EFF2  F07C         	goto	u840
  1032  00F9E0                     u841:
  1033  00F9E0  EFF4  F07C         	goto	l1589
  1034  00F9E4                     u840:
  1035  00F9E4  EF02  F07D         	goto	l28
  1036  00F9E8                     l1589:
  1037                           
  1038                           ;ecu/dc_motor/ecu_dc_motor.c: 25:         relay_initialize( & (dc_motor->relay1));
  1039  00F9E8  C032  F02E         	movff	dc_motor_initialize@dc_motor,relay_initialize@relay
  1040  00F9EC  C033  F02F         	movff	dc_motor_initialize@dc_motor+1,relay_initialize@relay+1
  1041  00F9F0  EC44  F07E         	call	_relay_initialize	;wreg free
  1042                           
  1043                           ;ecu/dc_motor/ecu_dc_motor.c: 26:         relay_initialize( & (dc_motor->relay2));
  1044  00F9F4  0E01               	movlw	1
  1045  00F9F6  2432               	addwf	dc_motor_initialize@dc_motor^0,w,c
  1046  00F9F8  6E2E               	movwf	relay_initialize@relay^0,c
  1047  00F9FA  0E00               	movlw	0
  1048  00F9FC  2033               	addwfc	(dc_motor_initialize@dc_motor+1)^0,w,c
  1049  00F9FE  6E2F               	movwf	(relay_initialize@relay+1)^0,c
  1050  00FA00  EC44  F07E         	call	_relay_initialize	;wreg free
  1051  00FA04                     l28:
  1052  00FA04  0012               	return		;funcret
  1053  00FA06                     __end_of_dc_motor_initialize:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _relay_initialize *****************
  1057 ;; Defined at:
  1058 ;;		line 19 in file "ecu/relay/ecu_relay.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  relay           2    9[COMRAM] PTR struct .
  1061 ;;		 -> dc_motor1_2(2), dc_motor1_1(2), 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  ret             1    0        enum E329
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      enum E329
  1066 ;; Registers used:
  1067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1077 ;;Total ram usage:        4 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; Hardware stack levels required when called:    1
  1080 ;; This function calls:
  1081 ;;		_gpio_pin_direction_initialize
  1082 ;;		_gpio_pin_write_value
  1083 ;; This function is called by:
  1084 ;;		_dc_motor_initialize
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text10
  1089  00FC88                     __ptext10:
  1090                           	callstack 0
  1091  00FC88                     _relay_initialize:
  1092                           	callstack 28
  1093  00FC88                     
  1094                           ;ecu/relay/ecu_relay.c: 21:     if ( (((void*)0) == relay ) || ( relay ->port_name > 5U 
      +                          -1 )
  1095  00FC88  502E               	movf	relay_initialize@relay^0,w,c
  1096  00FC8A  102F               	iorwf	(relay_initialize@relay+1)^0,w,c
  1097  00FC8C  B4D8               	btfsc	status,2,c
  1098  00FC8E  EF4B  F07E         	goto	u721
  1099  00FC92  EF4D  F07E         	goto	u720
  1100  00FC96                     u721:
  1101  00FC96  EF8F  F07E         	goto	l88
  1102  00FC9A                     u720:
  1103  00FC9A  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1104  00FC9E  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1105  00FCA2  50DF               	movf	indf2,w,c
  1106  00FCA4  0B0F               	andlw	15
  1107  00FCA6  6E30               	movwf	??_relay_initialize^0,c
  1108  00FCA8  0E05               	movlw	5
  1109  00FCAA  6030               	cpfslt	??_relay_initialize^0,c
  1110  00FCAC  EF5A  F07E         	goto	u731
  1111  00FCB0  EF5C  F07E         	goto	u730
  1112  00FCB4                     u731:
  1113  00FCB4  EF8F  F07E         	goto	l88
  1114  00FCB8                     u730:
  1115  00FCB8  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1116  00FCBC  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1117  00FCC0  38DF               	swapf	indf2,w,c
  1118  00FCC2  0B07               	andlw	7
  1119  00FCC4  6E30               	movwf	??_relay_initialize^0,c
  1120  00FCC6  0E07               	movlw	7
  1121  00FCC8  6430               	cpfsgt	??_relay_initialize^0,c
  1122  00FCCA  EF69  F07E         	goto	u741
  1123  00FCCE  EF6B  F07E         	goto	u740
  1124  00FCD2                     u741:
  1125  00FCD2  EF6D  F07E         	goto	l1499
  1126  00FCD6                     u740:
  1127  00FCD6  EF8F  F07E         	goto	l88
  1128  00FCDA                     l1499:
  1129                           
  1130                           ;ecu/relay/ecu_relay.c: 27:         gpio_pin_direction_initialize(relay->port_name , rel
      +                          ay->pin , DIRECTION_OUTPUT);
  1131  00FCDA  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1132  00FCDE  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1133  00FCE2  38DF               	swapf	indf2,w,c
  1134  00FCE4  0B07               	andlw	7
  1135  00FCE6  6E25               	movwf	gpio_pin_direction_initialize@pin^0,c
  1136  00FCE8  0E00               	movlw	0
  1137  00FCEA  6E26               	movwf	gpio_pin_direction_initialize@direction^0,c
  1138  00FCEC  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1139  00FCF0  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1140  00FCF4  50DF               	movf	indf2,w,c
  1141  00FCF6  0B0F               	andlw	15
  1142  00FCF8  EC38  F07F         	call	_gpio_pin_direction_initialize
  1143                           
  1144                           ;ecu/relay/ecu_relay.c: 28:         gpio_pin_write_value(relay->port_name , relay->pin ,
      +                           LOW );
  1145  00FCFC  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1146  00FD00  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1147  00FD04  38DF               	swapf	indf2,w,c
  1148  00FD06  0B07               	andlw	7
  1149  00FD08  6E25               	movwf	gpio_pin_write_value@pin^0,c
  1150  00FD0A  0E00               	movlw	0
  1151  00FD0C  6E26               	movwf	gpio_pin_write_value@logic^0,c
  1152  00FD0E  C02E  FFD9         	movff	relay_initialize@relay,fsr2l
  1153  00FD12  C02F  FFDA         	movff	relay_initialize@relay+1,fsr2h
  1154  00FD16  50DF               	movf	indf2,w,c
  1155  00FD18  0B0F               	andlw	15
  1156  00FD1A  EC9C  F07F         	call	_gpio_pin_write_value
  1157  00FD1E                     l88:
  1158  00FD1E  0012               	return		;funcret
  1159  00FD20                     __end_of_relay_initialize:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _gpio_pin_write_value *****************
  1163 ;; Defined at:
  1164 ;;		line 105 in file "mcal/gpio/mcal_gpio.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  port            1    wreg     enum E2858
  1167 ;;  pin             1    0[COMRAM] enum E2848
  1168 ;;  logic           1    1[COMRAM] enum E2840
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  port            1    8[COMRAM] enum E2858
  1171 ;;  ret             1    0        enum E329
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      enum E329
  1174 ;; Registers used:
  1175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;Total ram usage:        9 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; This function calls:
  1188 ;;		Nothing
  1189 ;; This function is called by:
  1190 ;;		_relay_initialize
  1191 ;;		_relay_turn_on
  1192 ;;		_relay_turn_off
  1193 ;;		_led_initalize
  1194 ;;		_led_turn_on
  1195 ;;		_led_turn_off
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text11
  1200  00FF38                     __ptext11:
  1201                           	callstack 0
  1202  00FF38                     _gpio_pin_write_value:
  1203                           	callstack 27
  1204                           
  1205                           ;incstack = 0
  1206                           ;gpio_pin_write_value@port stored from wreg
  1207  00FF38  6E2D               	movwf	gpio_pin_write_value@port^0,c
  1208  00FF3A                     
  1209                           ;mcal/gpio/mcal_gpio.c: 108:     if ( pin > 8U -1 || pin < 0 ){
  1210  00FF3A  0E08               	movlw	8
  1211  00FF3C  6025               	cpfslt	gpio_pin_write_value@pin^0,c
  1212  00FF3E  EFA3  F07F         	goto	u571
  1213  00FF42  EFA5  F07F         	goto	u570
  1214  00FF46                     u571:
  1215  00FF46  EFFF  F07F         	goto	l169
  1216  00FF4A                     u570:
  1217  00FF4A  EFEA  F07F         	goto	l1413
  1218  00FF4E                     l1403:
  1219                           
  1220                           ;mcal/gpio/mcal_gpio.c: 115:                 (*lat_register[port] &= ~(1U << pin));
  1221  00FF4E  C025  F027         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1222  00FF52  0E01               	movlw	1
  1223  00FF54  6E28               	movwf	(??_gpio_pin_write_value+1)^0,c
  1224  00FF56  2A27               	incf	??_gpio_pin_write_value^0,f,c
  1225  00FF58  EFB0  F07F         	goto	u584
  1226  00FF5C                     u585:
  1227  00FF5C  90D8               	bcf	status,0,c
  1228  00FF5E  3628               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1229  00FF60                     u584:
  1230  00FF60  2E27               	decfsz	??_gpio_pin_write_value^0,f,c
  1231  00FF62  EFAE  F07F         	goto	u585
  1232  00FF66  5028               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1233  00FF68  0AFF               	xorlw	255
  1234  00FF6A  6E29               	movwf	(??_gpio_pin_write_value+2)^0,c
  1235  00FF6C  502D               	movf	gpio_pin_write_value@port^0,w,c
  1236  00FF6E  0D02               	mullw	2
  1237  00FF70  0E0B               	movlw	low _lat_register
  1238  00FF72  24F3               	addwf	243,w,c
  1239  00FF74  6ED9               	movwf	fsr2l,c
  1240  00FF76  0E00               	movlw	high _lat_register
  1241  00FF78  20F4               	addwfc	prodh,w,c
  1242  00FF7A  6EDA               	movwf	fsr2h,c
  1243  00FF7C  CFDE F02A          	movff	postinc2,??_gpio_pin_write_value+3
  1244  00FF80  CFDD F02B          	movff	postdec2,??_gpio_pin_write_value+4
  1245  00FF84  C02A  FFD9         	movff	??_gpio_pin_write_value+3,fsr2l
  1246  00FF88  C02B  FFDA         	movff	??_gpio_pin_write_value+4,fsr2h
  1247  00FF8C  5029               	movf	(??_gpio_pin_write_value+2)^0,w,c
  1248  00FF8E  16DF               	andwf	indf2,f,c
  1249  00FF90                     
  1250                           ;mcal/gpio/mcal_gpio.c: 117:                 break;
  1251  00FF90  EFFF  F07F         	goto	l169
  1252  00FF94                     l1407:
  1253                           
  1254                           ;mcal/gpio/mcal_gpio.c: 121:                 (*lat_register[port] |= (1U << pin)); break
      +                          ;
  1255  00FF94  C025  F027         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
  1256  00FF98  0E01               	movlw	1
  1257  00FF9A  6E28               	movwf	(??_gpio_pin_write_value+1)^0,c
  1258  00FF9C  2A27               	incf	??_gpio_pin_write_value^0,f,c
  1259  00FF9E  EFD3  F07F         	goto	u594
  1260  00FFA2                     u595:
  1261  00FFA2  90D8               	bcf	status,0,c
  1262  00FFA4  3628               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
  1263  00FFA6                     u594:
  1264  00FFA6  2E27               	decfsz	??_gpio_pin_write_value^0,f,c
  1265  00FFA8  EFD1  F07F         	goto	u595
  1266  00FFAC  502D               	movf	gpio_pin_write_value@port^0,w,c
  1267  00FFAE  0D02               	mullw	2
  1268  00FFB0  0E0B               	movlw	low _lat_register
  1269  00FFB2  24F3               	addwf	243,w,c
  1270  00FFB4  6ED9               	movwf	fsr2l,c
  1271  00FFB6  0E00               	movlw	high _lat_register
  1272  00FFB8  20F4               	addwfc	prodh,w,c
  1273  00FFBA  6EDA               	movwf	fsr2h,c
  1274  00FFBC  CFDE F029          	movff	postinc2,??_gpio_pin_write_value+2
  1275  00FFC0  CFDD F02A          	movff	postdec2,??_gpio_pin_write_value+3
  1276  00FFC4  C029  FFD9         	movff	??_gpio_pin_write_value+2,fsr2l
  1277  00FFC8  C02A  FFDA         	movff	??_gpio_pin_write_value+3,fsr2h
  1278  00FFCC  5028               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1279  00FFCE  12DF               	iorwf	indf2,f,c
  1280  00FFD0  EFFF  F07F         	goto	l169
  1281  00FFD4                     l1413:
  1282  00FFD4  5026               	movf	gpio_pin_write_value@logic^0,w,c
  1283  00FFD6  6E27               	movwf	??_gpio_pin_write_value^0,c
  1284  00FFD8  6A28               	clrf	(??_gpio_pin_write_value+1)^0,c
  1285                           
  1286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1287                           ; Switch size 1, requested type "simple"
  1288                           ; Number of cases is 1, Range of values is 0 to 0
  1289                           ; switch strategies available:
  1290                           ; Name         Instructions Cycles
  1291                           ; simple_byte            4     3 (average)
  1292                           ;	Chosen strategy is simple_byte
  1293  00FFDA  5028               	movf	(??_gpio_pin_write_value+1)^0,w,c
  1294  00FFDC  0A00               	xorlw	0	; case 0
  1295  00FFDE  B4D8               	btfsc	status,2,c
  1296  00FFE0  EFF4  F07F         	goto	l1677
  1297  00FFE4  EFFF  F07F         	goto	l169
  1298  00FFE8                     l1677:
  1299                           
  1300                           ; Switch size 1, requested type "simple"
  1301                           ; Number of cases is 2, Range of values is 0 to 1
  1302                           ; switch strategies available:
  1303                           ; Name         Instructions Cycles
  1304                           ; simple_byte            7     4 (average)
  1305                           ;	Chosen strategy is simple_byte
  1306  00FFE8  5027               	movf	??_gpio_pin_write_value^0,w,c
  1307  00FFEA  0A00               	xorlw	0	; case 0
  1308  00FFEC  B4D8               	btfsc	status,2,c
  1309  00FFEE  EFA7  F07F         	goto	l1403
  1310  00FFF2  0A01               	xorlw	1	; case 1
  1311  00FFF4  B4D8               	btfsc	status,2,c
  1312  00FFF6  EFCA  F07F         	goto	l1407
  1313  00FFFA  EFFF  F07F         	goto	l169
  1314  00FFFE                     l169:
  1315  00FFFE  0012               	return		;funcret
  1316  010000                     __end_of_gpio_pin_write_value:
  1317                           	callstack 0
  1318                           
  1319 ;; *************** function _button_initialize *****************
  1320 ;; Defined at:
  1321 ;;		line 17 in file "ecu/button/ecu_button.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  btn             2    9[COMRAM] PTR struct .
  1324 ;;		 -> btn2(1), btn1(1), 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  ret             1    0        enum E329
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      enum E329
  1329 ;; Registers used:
  1330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;Total ram usage:        4 bytes
  1341 ;; Hardware stack levels used:    1
  1342 ;; Hardware stack levels required when called:    1
  1343 ;; This function calls:
  1344 ;;		_gpio_pin_direction_initialize
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text12
  1351  00FB12                     __ptext12:
  1352                           	callstack 0
  1353  00FB12                     _button_initialize:
  1354                           	callstack 29
  1355  00FB12                     
  1356                           ;ecu/button/ecu_button.c: 19:     if((((void*)0) == btn) || (btn->port_name > 5U -1) ||
  1357  00FB12  502E               	movf	button_initialize@btn^0,w,c
  1358  00FB14  102F               	iorwf	(button_initialize@btn+1)^0,w,c
  1359  00FB16  B4D8               	btfsc	status,2,c
  1360  00FB18  EF90  F07D         	goto	u781
  1361  00FB1C  EF92  F07D         	goto	u780
  1362  00FB20                     u781:
  1363  00FB20  EFC3  F07D         	goto	l10
  1364  00FB24                     u780:
  1365  00FB24  C02E  FFD9         	movff	button_initialize@btn,fsr2l
  1366  00FB28  C02F  FFDA         	movff	button_initialize@btn+1,fsr2h
  1367  00FB2C  50DF               	movf	indf2,w,c
  1368  00FB2E  0B0F               	andlw	15
  1369  00FB30  6E30               	movwf	??_button_initialize^0,c
  1370  00FB32  0E05               	movlw	5
  1371  00FB34  6030               	cpfslt	??_button_initialize^0,c
  1372  00FB36  EF9F  F07D         	goto	u791
  1373  00FB3A  EFA1  F07D         	goto	u790
  1374  00FB3E                     u791:
  1375  00FB3E  EFC3  F07D         	goto	l10
  1376  00FB42                     u790:
  1377  00FB42  C02E  FFD9         	movff	button_initialize@btn,fsr2l
  1378  00FB46  C02F  FFDA         	movff	button_initialize@btn+1,fsr2h
  1379  00FB4A  38DF               	swapf	indf2,w,c
  1380  00FB4C  0B07               	andlw	7
  1381  00FB4E  6E30               	movwf	??_button_initialize^0,c
  1382  00FB50  0E07               	movlw	7
  1383  00FB52  6430               	cpfsgt	??_button_initialize^0,c
  1384  00FB54  EFAE  F07D         	goto	u801
  1385  00FB58  EFB0  F07D         	goto	u800
  1386  00FB5C                     u801:
  1387  00FB5C  EFB2  F07D         	goto	l1557
  1388  00FB60                     u800:
  1389  00FB60  EFC3  F07D         	goto	l10
  1390  00FB64                     l1557:
  1391                           
  1392                           ;ecu/button/ecu_button.c: 24:         gpio_pin_direction_initialize(btn->port_name, btn-
      +                          >pin, DIRECTION_INPUT);
  1393  00FB64  C02E  FFD9         	movff	button_initialize@btn,fsr2l
  1394  00FB68  C02F  FFDA         	movff	button_initialize@btn+1,fsr2h
  1395  00FB6C  38DF               	swapf	indf2,w,c
  1396  00FB6E  0B07               	andlw	7
  1397  00FB70  6E25               	movwf	gpio_pin_direction_initialize@pin^0,c
  1398  00FB72  0E01               	movlw	1
  1399  00FB74  6E26               	movwf	gpio_pin_direction_initialize@direction^0,c
  1400  00FB76  C02E  FFD9         	movff	button_initialize@btn,fsr2l
  1401  00FB7A  C02F  FFDA         	movff	button_initialize@btn+1,fsr2h
  1402  00FB7E  50DF               	movf	indf2,w,c
  1403  00FB80  0B0F               	andlw	15
  1404  00FB82  EC38  F07F         	call	_gpio_pin_direction_initialize
  1405  00FB86                     l10:
  1406  00FB86  0012               	return		;funcret
  1407  00FB88                     __end_of_button_initialize:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _gpio_pin_direction_initialize *****************
  1411 ;; Defined at:
  1412 ;;		line 48 in file "mcal/gpio/mcal_gpio.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  port            1    wreg     enum E2858
  1415 ;;  pin             1    0[COMRAM] enum E2848
  1416 ;;  direction       1    1[COMRAM] enum E2844
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  port            1    8[COMRAM] enum E2858
  1419 ;;  ret             1    0        enum E329
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      enum E329
  1422 ;; Registers used:
  1423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;Total ram usage:        9 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_button_initialize
  1439 ;;		_relay_initialize
  1440 ;;		_led_initalize
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text13
  1445  00FE70                     __ptext13:
  1446                           	callstack 0
  1447  00FE70                     _gpio_pin_direction_initialize:
  1448                           	callstack 28
  1449                           
  1450                           ;incstack = 0
  1451                           ;gpio_pin_direction_initialize@port stored from wreg
  1452  00FE70  6E2D               	movwf	gpio_pin_direction_initialize@port^0,c
  1453  00FE72                     
  1454                           ;mcal/gpio/mcal_gpio.c: 52:     if(pin > 8U -1 || pin < 0){
  1455  00FE72  0E08               	movlw	8
  1456  00FE74  6025               	cpfslt	gpio_pin_direction_initialize@pin^0,c
  1457  00FE76  EF3F  F07F         	goto	u601
  1458  00FE7A  EF41  F07F         	goto	u600
  1459  00FE7E                     u601:
  1460  00FE7E  EF9B  F07F         	goto	l150
  1461  00FE82                     u600:
  1462  00FE82  EF86  F07F         	goto	l1433
  1463  00FE86                     l1427:
  1464                           
  1465                           ;mcal/gpio/mcal_gpio.c: 60:                 (*tris_register[port] &= ~(1U << pin)); brea
      +                          k;
  1466  00FE86  C025  F027         	movff	gpio_pin_direction_initialize@pin,??_gpio_pin_direction_initialize
  1467  00FE8A  0E01               	movlw	1
  1468  00FE8C  6E28               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1469  00FE8E  2A27               	incf	??_gpio_pin_direction_initialize^0,f,c
  1470  00FE90  EF4C  F07F         	goto	u614
  1471  00FE94                     u615:
  1472  00FE94  90D8               	bcf	status,0,c
  1473  00FE96  3628               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1474  00FE98                     u614:
  1475  00FE98  2E27               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1476  00FE9A  EF4A  F07F         	goto	u615
  1477  00FE9E  5028               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1478  00FEA0  0AFF               	xorlw	255
  1479  00FEA2  6E29               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1480  00FEA4  502D               	movf	gpio_pin_direction_initialize@port^0,w,c
  1481  00FEA6  0D02               	mullw	2
  1482  00FEA8  0E15               	movlw	low _tris_register
  1483  00FEAA  24F3               	addwf	243,w,c
  1484  00FEAC  6ED9               	movwf	fsr2l,c
  1485  00FEAE  0E00               	movlw	high _tris_register
  1486  00FEB0  20F4               	addwfc	prodh,w,c
  1487  00FEB2  6EDA               	movwf	fsr2h,c
  1488  00FEB4  CFDE F02A          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1489  00FEB8  CFDD F02B          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1490  00FEBC  C02A  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1491  00FEC0  C02B  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1492  00FEC4  5029               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1493  00FEC6  16DF               	andwf	indf2,f,c
  1494  00FEC8  EF9B  F07F         	goto	l150
  1495  00FECC                     l1429:
  1496                           
  1497                           ;mcal/gpio/mcal_gpio.c: 65:                 (*tris_register[port] |= (1U << pin)); break
      +                          ;
  1498  00FECC  C025  F027         	movff	gpio_pin_direction_initialize@pin,??_gpio_pin_direction_initialize
  1499  00FED0  0E01               	movlw	1
  1500  00FED2  6E28               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1501  00FED4  2A27               	incf	??_gpio_pin_direction_initialize^0,f,c
  1502  00FED6  EF6F  F07F         	goto	u624
  1503  00FEDA                     u625:
  1504  00FEDA  90D8               	bcf	status,0,c
  1505  00FEDC  3628               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1506  00FEDE                     u624:
  1507  00FEDE  2E27               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1508  00FEE0  EF6D  F07F         	goto	u625
  1509  00FEE4  502D               	movf	gpio_pin_direction_initialize@port^0,w,c
  1510  00FEE6  0D02               	mullw	2
  1511  00FEE8  0E15               	movlw	low _tris_register
  1512  00FEEA  24F3               	addwf	243,w,c
  1513  00FEEC  6ED9               	movwf	fsr2l,c
  1514  00FEEE  0E00               	movlw	high _tris_register
  1515  00FEF0  20F4               	addwfc	prodh,w,c
  1516  00FEF2  6EDA               	movwf	fsr2h,c
  1517  00FEF4  CFDE F029          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1518  00FEF8  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1519  00FEFC  C029  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1520  00FF00  C02A  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1521  00FF04  5028               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1522  00FF06  12DF               	iorwf	indf2,f,c
  1523  00FF08  EF9B  F07F         	goto	l150
  1524  00FF0C                     l1433:
  1525  00FF0C  5026               	movf	gpio_pin_direction_initialize@direction^0,w,c
  1526  00FF0E  6E27               	movwf	??_gpio_pin_direction_initialize^0,c
  1527  00FF10  6A28               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1528                           
  1529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1530                           ; Switch size 1, requested type "simple"
  1531                           ; Number of cases is 1, Range of values is 0 to 0
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte            4     3 (average)
  1535                           ;	Chosen strategy is simple_byte
  1536  00FF12  5028               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1537  00FF14  0A00               	xorlw	0	; case 0
  1538  00FF16  B4D8               	btfsc	status,2,c
  1539  00FF18  EF90  F07F         	goto	l1679
  1540  00FF1C  EF9B  F07F         	goto	l150
  1541  00FF20                     l1679:
  1542                           
  1543                           ; Switch size 1, requested type "simple"
  1544                           ; Number of cases is 2, Range of values is 0 to 1
  1545                           ; switch strategies available:
  1546                           ; Name         Instructions Cycles
  1547                           ; simple_byte            7     4 (average)
  1548                           ;	Chosen strategy is simple_byte
  1549  00FF20  5027               	movf	??_gpio_pin_direction_initialize^0,w,c
  1550  00FF22  0A00               	xorlw	0	; case 0
  1551  00FF24  B4D8               	btfsc	status,2,c
  1552  00FF26  EF43  F07F         	goto	l1427
  1553  00FF2A  0A01               	xorlw	1	; case 1
  1554  00FF2C  B4D8               	btfsc	status,2,c
  1555  00FF2E  EF66  F07F         	goto	l1429
  1556  00FF32  EF9B  F07F         	goto	l150
  1557  00FF36                     l150:
  1558  00FF36  0012               	return		;funcret
  1559  00FF38                     __end_of_gpio_pin_direction_initialize:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function _button_get_status *****************
  1563 ;; Defined at:
  1564 ;;		line 35 in file "ecu/button/ecu_button.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  btn             2    9[COMRAM] PTR struct .
  1567 ;;		 -> btn2(1), btn1(1), 
  1568 ;;  btn_status      2   11[COMRAM] PTR enum E2900
  1569 ;;		 -> btn2_status(1), btn1_status(1), 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  ret             1    0        enum E329
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      enum E329
  1574 ;; Registers used:
  1575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;Total ram usage:        6 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    1
  1588 ;; This function calls:
  1589 ;;		_gpio_pin_read_value
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text14
  1596  00FD20                     __ptext14:
  1597                           	callstack 0
  1598  00FD20                     _button_get_status:
  1599                           	callstack 29
  1600  00FD20                     
  1601                           ;ecu/button/ecu_button.c: 37:     if((((void*)0) == btn) || (btn->port_name > 5U -1) ||
  1602  00FD20  502E               	movf	button_get_status@btn^0,w,c
  1603  00FD22  102F               	iorwf	(button_get_status@btn+1)^0,w,c
  1604  00FD24  B4D8               	btfsc	status,2,c
  1605  00FD26  EF97  F07E         	goto	u811
  1606  00FD2A  EF99  F07E         	goto	u810
  1607  00FD2E                     u811:
  1608  00FD2E  EFDD  F07E         	goto	l17
  1609  00FD32                     u810:
  1610  00FD32  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1611  00FD36  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1612  00FD3A  50DF               	movf	indf2,w,c
  1613  00FD3C  0B0F               	andlw	15
  1614  00FD3E  6E32               	movwf	??_button_get_status^0,c
  1615  00FD40  0E05               	movlw	5
  1616  00FD42  6032               	cpfslt	??_button_get_status^0,c
  1617  00FD44  EFA6  F07E         	goto	u821
  1618  00FD48  EFA8  F07E         	goto	u820
  1619  00FD4C                     u821:
  1620  00FD4C  EFDD  F07E         	goto	l17
  1621  00FD50                     u820:
  1622  00FD50  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1623  00FD54  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1624  00FD58  38DF               	swapf	indf2,w,c
  1625  00FD5A  0B07               	andlw	7
  1626  00FD5C  6E32               	movwf	??_button_get_status^0,c
  1627  00FD5E  0E07               	movlw	7
  1628  00FD60  6432               	cpfsgt	??_button_get_status^0,c
  1629  00FD62  EFB5  F07E         	goto	u831
  1630  00FD66  EFB7  F07E         	goto	u830
  1631  00FD6A                     u831:
  1632  00FD6A  EFB9  F07E         	goto	l1573
  1633  00FD6E                     u830:
  1634  00FD6E  EFDD  F07E         	goto	l17
  1635  00FD72                     l1573:
  1636                           
  1637                           ;ecu/button/ecu_button.c: 42:         gpio_pin_read_value(btn->port_name, btn->pin, btn_
      +                          status);
  1638  00FD72  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1639  00FD76  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1640  00FD7A  38DF               	swapf	indf2,w,c
  1641  00FD7C  0B07               	andlw	7
  1642  00FD7E  6E25               	movwf	gpio_pin_read_value@pin^0,c
  1643  00FD80  C030  F026         	movff	button_get_status@btn_status,gpio_pin_read_value@logic
  1644  00FD84  C031  F027         	movff	button_get_status@btn_status+1,gpio_pin_read_value@logic+1
  1645  00FD88  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1646  00FD8C  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1647  00FD90  50DF               	movf	indf2,w,c
  1648  00FD92  0B0F               	andlw	15
  1649  00FD94  EC51  F07D         	call	_gpio_pin_read_value
  1650  00FD98                     
  1651                           ;ecu/button/ecu_button.c: 43:         btn->button_status = *btn_status;
  1652  00FD98  C030  FFD9         	movff	button_get_status@btn_status,fsr2l
  1653  00FD9C  C031  FFDA         	movff	button_get_status@btn_status+1,fsr2h
  1654  00FDA0  50DF               	movf	indf2,w,c
  1655  00FDA2  6E32               	movwf	??_button_get_status^0,c
  1656  00FDA4  C02E  FFD9         	movff	button_get_status@btn,fsr2l
  1657  00FDA8  C02F  FFDA         	movff	button_get_status@btn+1,fsr2h
  1658  00FDAC  3232               	rrcf	??_button_get_status^0,f,c
  1659  00FDAE  3232               	rrcf	??_button_get_status^0,f,c
  1660  00FDB0  50DF               	movf	indf2,w,c
  1661  00FDB2  1832               	xorwf	??_button_get_status^0,w,c
  1662  00FDB4  0B7F               	andlw	-129
  1663  00FDB6  1832               	xorwf	??_button_get_status^0,w,c
  1664  00FDB8  6EDF               	movwf	indf2,c
  1665  00FDBA                     l17:
  1666  00FDBA  0012               	return		;funcret
  1667  00FDBC                     __end_of_button_get_status:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _gpio_pin_read_value *****************
  1671 ;; Defined at:
  1672 ;;		line 137 in file "mcal/gpio/mcal_gpio.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  port            1    wreg     enum E2858
  1675 ;;  pin             1    0[COMRAM] enum E2848
  1676 ;;  logic           2    1[COMRAM] PTR enum E2840
  1677 ;;		 -> btn2_status(1), btn1_status(1), 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  port            1    8[COMRAM] enum E2858
  1680 ;;  ret             1    0        enum E329
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      enum E329
  1683 ;; Registers used:
  1684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:        9 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_button_get_status
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text15
  1704  00FAA2                     __ptext15:
  1705                           	callstack 0
  1706  00FAA2                     _gpio_pin_read_value:
  1707                           	callstack 29
  1708                           
  1709                           ;incstack = 0
  1710                           ;gpio_pin_read_value@port stored from wreg
  1711  00FAA2  6E2D               	movwf	gpio_pin_read_value@port^0,c
  1712  00FAA4                     
  1713                           ;mcal/gpio/mcal_gpio.c: 140:     if ( pin > 8U -1 || ((void*)0) ==logic ){
  1714  00FAA4  0E08               	movlw	8
  1715  00FAA6  6025               	cpfslt	gpio_pin_read_value@pin^0,c
  1716  00FAA8  EF58  F07D         	goto	u691
  1717  00FAAC  EF5A  F07D         	goto	u690
  1718  00FAB0                     u691:
  1719  00FAB0  EF88  F07D         	goto	l181
  1720  00FAB4                     u690:
  1721  00FAB4  5026               	movf	gpio_pin_read_value@logic^0,w,c
  1722  00FAB6  1027               	iorwf	(gpio_pin_read_value@logic+1)^0,w,c
  1723  00FAB8  A4D8               	btfss	status,2,c
  1724  00FABA  EF61  F07D         	goto	u701
  1725  00FABE  EF63  F07D         	goto	u700
  1726  00FAC2                     u701:
  1727  00FAC2  EF65  F07D         	goto	l1483
  1728  00FAC6                     u700:
  1729  00FAC6  EF88  F07D         	goto	l181
  1730  00FACA                     l1483:
  1731                           
  1732                           ;mcal/gpio/mcal_gpio.c: 144:           *logic = ((*port_register[port] >> pin) & 1U);
  1733  00FACA  C025  F028         	movff	gpio_pin_read_value@pin,??_gpio_pin_read_value
  1734  00FACE  502D               	movf	gpio_pin_read_value@port^0,w,c
  1735  00FAD0  0D02               	mullw	2
  1736  00FAD2  0E01               	movlw	low _port_register
  1737  00FAD4  24F3               	addwf	243,w,c
  1738  00FAD6  6ED9               	movwf	fsr2l,c
  1739  00FAD8  0E00               	movlw	high _port_register
  1740  00FADA  20F4               	addwfc	prodh,w,c
  1741  00FADC  6EDA               	movwf	fsr2h,c
  1742  00FADE  CFDE F029          	movff	postinc2,??_gpio_pin_read_value+1
  1743  00FAE2  CFDD F02A          	movff	postdec2,??_gpio_pin_read_value+2
  1744  00FAE6  C029  FFD9         	movff	??_gpio_pin_read_value+1,fsr2l
  1745  00FAEA  C02A  FFDA         	movff	??_gpio_pin_read_value+2,fsr2h
  1746  00FAEE  50DF               	movf	indf2,w,c
  1747  00FAF0  6E2B               	movwf	(??_gpio_pin_read_value+3)^0,c
  1748  00FAF2  2A28               	incf	??_gpio_pin_read_value^0,f,c
  1749  00FAF4  EF7E  F07D         	goto	u714
  1750  00FAF8                     u715:
  1751  00FAF8  90D8               	bcf	status,0,c
  1752  00FAFA  322B               	rrcf	(??_gpio_pin_read_value+3)^0,f,c
  1753  00FAFC                     u714:
  1754  00FAFC  2E28               	decfsz	??_gpio_pin_read_value^0,f,c
  1755  00FAFE  EF7C  F07D         	goto	u715
  1756  00FB02  502B               	movf	(??_gpio_pin_read_value+3)^0,w,c
  1757  00FB04  0B01               	andlw	1
  1758  00FB06  C026  FFD9         	movff	gpio_pin_read_value@logic,fsr2l
  1759  00FB0A  C027  FFDA         	movff	gpio_pin_read_value@logic+1,fsr2h
  1760  00FB0E  6EDF               	movwf	indf2,c
  1761  00FB10                     l181:
  1762  00FB10  0012               	return		;funcret
  1763  00FB12                     __end_of_gpio_pin_read_value:
  1764                           	callstack 0
  1765  0000                     
  1766                           	psect	rparam
  1767  0000                     
  1768                           	psect	idloc
  1769                           
  1770                           ;Config register IDLOC0 @ 0x200000
  1771                           ;	unspecified, using default values
  1772  200000                     	org	2097152
  1773  200000  FF                 	db	255
  1774                           
  1775                           ;Config register IDLOC1 @ 0x200001
  1776                           ;	unspecified, using default values
  1777  200001                     	org	2097153
  1778  200001  FF                 	db	255
  1779                           
  1780                           ;Config register IDLOC2 @ 0x200002
  1781                           ;	unspecified, using default values
  1782  200002                     	org	2097154
  1783  200002  FF                 	db	255
  1784                           
  1785                           ;Config register IDLOC3 @ 0x200003
  1786                           ;	unspecified, using default values
  1787  200003                     	org	2097155
  1788  200003  FF                 	db	255
  1789                           
  1790                           ;Config register IDLOC4 @ 0x200004
  1791                           ;	unspecified, using default values
  1792  200004                     	org	2097156
  1793  200004  FF                 	db	255
  1794                           
  1795                           ;Config register IDLOC5 @ 0x200005
  1796                           ;	unspecified, using default values
  1797  200005                     	org	2097157
  1798  200005  FF                 	db	255
  1799                           
  1800                           ;Config register IDLOC6 @ 0x200006
  1801                           ;	unspecified, using default values
  1802  200006                     	org	2097158
  1803  200006  FF                 	db	255
  1804                           
  1805                           ;Config register IDLOC7 @ 0x200007
  1806                           ;	unspecified, using default values
  1807  200007                     	org	2097159
  1808  200007  FF                 	db	255
  1809                           
  1810                           	psect	config
  1811                           
  1812                           ; Padding undefined space
  1813  300000                     	org	3145728
  1814  300000  FF                 	db	255
  1815                           
  1816                           ;Config register CONFIG1H @ 0x300001
  1817                           ;	Oscillator Selection bits
  1818                           ;	FOSC = RCIO6, External RC oscillator, port function on RA6
  1819                           ;	Fail-Safe Clock Monitor Enable bit
  1820                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1821                           ;	Internal/External Oscillator Switchover bit
  1822                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1823  300001                     	org	3145729
  1824  300001  07                 	db	7
  1825                           
  1826                           ;Config register CONFIG2L @ 0x300002
  1827                           ;	Power-up Timer Enable bit
  1828                           ;	PWRT = OFF, PWRT disabled
  1829                           ;	Brown-out Reset Enable bits
  1830                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1831                           ;	Brown Out Reset Voltage bits
  1832                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1833  300002                     	org	3145730
  1834  300002  1F                 	db	31
  1835                           
  1836                           ;Config register CONFIG2H @ 0x300003
  1837                           ;	Watchdog Timer Enable bit
  1838                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  1839                           ;	Watchdog Timer Postscale Select bits
  1840                           ;	WDTPS = 32768, 1:32768
  1841  300003                     	org	3145731
  1842  300003  1F                 	db	31
  1843                           
  1844                           ; Padding undefined space
  1845  300004                     	org	3145732
  1846  300004  FF                 	db	255
  1847                           
  1848                           ;Config register CONFIG3H @ 0x300005
  1849                           ;	CCP2 MUX bit
  1850                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1851                           ;	PORTB A/D Enable bit
  1852                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1853                           ;	Low-Power Timer1 Oscillator Enable bit
  1854                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1855                           ;	HFINTOSC Fast Start-up
  1856                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1857                           ;	MCLR Pin Enable bit
  1858                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1859  300005                     	org	3145733
  1860  300005  8B                 	db	139
  1861                           
  1862                           ;Config register CONFIG4L @ 0x300006
  1863                           ;	Stack Full/Underflow Reset Enable bit
  1864                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1865                           ;	Single-Supply ICSP Enable bit
  1866                           ;	LVP = ON, Single-Supply ICSP enabled
  1867                           ;	Extended Instruction Set Enable bit
  1868                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1869                           ;	Background Debugger Enable bit
  1870                           ;	DEBUG = 0x1, unprogrammed default
  1871  300006                     	org	3145734
  1872  300006  85                 	db	133
  1873                           
  1874                           ; Padding undefined space
  1875  300007                     	org	3145735
  1876  300007  FF                 	db	255
  1877                           
  1878                           ;Config register CONFIG5L @ 0x300008
  1879                           ;	Code Protection Block 0
  1880                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1881                           ;	Code Protection Block 1
  1882                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1883                           ;	Code Protection Block 2
  1884                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1885                           ;	Code Protection Block 3
  1886                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1887  300008                     	org	3145736
  1888  300008  0F                 	db	15
  1889                           
  1890                           ;Config register CONFIG5H @ 0x300009
  1891                           ;	Boot Block Code Protection bit
  1892                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1893                           ;	Data EEPROM Code Protection bit
  1894                           ;	CPD = OFF, Data EEPROM not code-protected
  1895  300009                     	org	3145737
  1896  300009  C0                 	db	192
  1897                           
  1898                           ;Config register CONFIG6L @ 0x30000A
  1899                           ;	Write Protection Block 0
  1900                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1901                           ;	Write Protection Block 1
  1902                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1903                           ;	Write Protection Block 2
  1904                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1905                           ;	Write Protection Block 3
  1906                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1907  30000A                     	org	3145738
  1908  30000A  0F                 	db	15
  1909                           
  1910                           ;Config register CONFIG6H @ 0x30000B
  1911                           ;	Configuration Register Write Protection bit
  1912                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1913                           ;	Boot Block Write Protection bit
  1914                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1915                           ;	Data EEPROM Write Protection bit
  1916                           ;	WRTD = OFF, Data EEPROM not write-protected
  1917  30000B                     	org	3145739
  1918  30000B  E0                 	db	224
  1919                           
  1920                           ;Config register CONFIG7L @ 0x30000C
  1921                           ;	Table Read Protection Block 0
  1922                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1923                           ;	Table Read Protection Block 1
  1924                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1925                           ;	Table Read Protection Block 2
  1926                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1927                           ;	Table Read Protection Block 3
  1928                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1929  30000C                     	org	3145740
  1930  30000C  0F                 	db	15
  1931                           
  1932                           ;Config register CONFIG7H @ 0x30000D
  1933                           ;	Boot Block Table Read Protection bit
  1934                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1935  30000D                     	org	3145741
  1936  30000D  40                 	db	64
  1937                           tosu	equ	0xFFF
  1938                           tosh	equ	0xFFE
  1939                           tosl	equ	0xFFD
  1940                           stkptr	equ	0xFFC
  1941                           pclatu	equ	0xFFB
  1942                           pclath	equ	0xFFA
  1943                           pcl	equ	0xFF9
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           prodh	equ	0xFF4
  1949                           prodl	equ	0xFF3
  1950                           indf0	equ	0xFEF
  1951                           postinc0	equ	0xFEE
  1952                           postdec0	equ	0xFED
  1953                           preinc0	equ	0xFEC
  1954                           plusw0	equ	0xFEB
  1955                           fsr0h	equ	0xFEA
  1956                           fsr0l	equ	0xFE9
  1957                           wreg	equ	0xFE8
  1958                           indf1	equ	0xFE7
  1959                           postinc1	equ	0xFE6
  1960                           postdec1	equ	0xFE5
  1961                           preinc1	equ	0xFE4
  1962                           plusw1	equ	0xFE3
  1963                           fsr1h	equ	0xFE2
  1964                           fsr1l	equ	0xFE1
  1965                           bsr	equ	0xFE0
  1966                           indf2	equ	0xFDF
  1967                           postinc2	equ	0xFDE
  1968                           postdec2	equ	0xFDD
  1969                           preinc2	equ	0xFDC
  1970                           plusw2	equ	0xFDB
  1971                           fsr2h	equ	0xFDA
  1972                           fsr2l	equ	0xFD9
  1973                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        36
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    gpio_pin_read_value@logic	PTR enum E2840 size(2) Largest target is 1
		 -> btn2_status(COMRAM[1]), btn1_status(COMRAM[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 

    relay_turn_off@relay	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    relay_turn_on@relay	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    relay_initialize@relay	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    dc_motor_stop@dc_motor	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    dc_motor_rotate_left@dc_motor	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    dc_motor_rotate_right@dc_motor	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    dc_motor_initialize@dc_motor	PTR struct . size(2) Largest target is 2
		 -> dc_motor1_2(COMRAM[2]), dc_motor1_1(COMRAM[2]), 

    button_get_status@btn_status	PTR enum E2900 size(2) Largest target is 1
		 -> btn2_status(COMRAM[1]), btn1_status(COMRAM[1]), 

    button_get_status@btn	PTR struct . size(2) Largest target is 1
		 -> btn2(COMRAM[1]), btn1(COMRAM[1]), 

    button_initialize@btn	PTR struct . size(2) Largest target is 1
		 -> btn2(COMRAM[1]), btn1(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_dc_motor_initialize
    _robot_move_stop->_dc_motor_stop
    _dc_motor_stop->_relay_turn_off
    _robot_move_forward->_dc_motor_rotate_right
    _dc_motor_rotate_right->_relay_turn_off
    _dc_motor_rotate_right->_relay_turn_on
    _robot_move_backward->_dc_motor_rotate_left
    _dc_motor_rotate_left->_relay_turn_off
    _dc_motor_rotate_left->_relay_turn_on
    _relay_turn_on->_gpio_pin_write_value
    _relay_turn_off->_gpio_pin_write_value
    _dc_motor_initialize->_relay_initialize
    _relay_initialize->_gpio_pin_direction_initialize
    _relay_initialize->_gpio_pin_write_value
    _button_initialize->_gpio_pin_direction_initialize
    _button_get_status->_gpio_pin_read_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11796
                  _button_get_status
                  _button_initialize
                _dc_motor_initialize
                _robot_move_backward
                 _robot_move_forward
                    _robot_move_stop
 ---------------------------------------------------------------------------------
 (1) _robot_move_stop                                      0     0      0    1741
                      _dc_motor_stop
 ---------------------------------------------------------------------------------
 (2) _dc_motor_stop                                        3     1      2    1741
                                             13 COMRAM     3     1      2
                     _relay_turn_off
 ---------------------------------------------------------------------------------
 (1) _robot_move_forward                                   0     0      0    3098
              _dc_motor_rotate_right
 ---------------------------------------------------------------------------------
 (2) _dc_motor_rotate_right                                3     1      2    3098
                                             13 COMRAM     3     1      2
                     _relay_turn_off
                      _relay_turn_on
 ---------------------------------------------------------------------------------
 (1) _robot_move_backward                                  0     0      0    3098
               _dc_motor_rotate_left
 ---------------------------------------------------------------------------------
 (2) _dc_motor_rotate_left                                 3     1      2    3098
                                             13 COMRAM     3     1      2
                     _relay_turn_off
                      _relay_turn_on
 ---------------------------------------------------------------------------------
 (3) _relay_turn_on                                        4     2      2    1357
                                              9 COMRAM     4     2      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (3) _relay_turn_off                                       4     2      2    1509
                                              9 COMRAM     4     2      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (1) _dc_motor_initialize                                  3     1      2    2212
                                             13 COMRAM     3     1      2
                   _relay_initialize
 ---------------------------------------------------------------------------------
 (2) _relay_initialize                                     4     2      2    1980
                                              9 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_value                                 9     7      2    1059
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _button_initialize                                    4     2      2     877
                                              9 COMRAM     4     2      2
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     601
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _button_get_status                                    6     2      4     770
                                              9 COMRAM     6     2      4
                _gpio_pin_read_value
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_value                                  9     6      3     276
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _button_get_status
     _gpio_pin_read_value
   _button_initialize
     _gpio_pin_direction_initialize
   _dc_motor_initialize
     _relay_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_value
   _robot_move_backward
     _dc_motor_rotate_left
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value
   _robot_move_forward
     _dc_motor_rotate_right
       _relay_turn_off
         _gpio_pin_write_value
       _relay_turn_on
         _gpio_pin_write_value
   _robot_move_stop
     _dc_motor_stop
       _relay_turn_off
         _gpio_pin_write_value

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      36       1       56.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      32        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 01 16:30:01 2021

                                    l10 FB86                                      l17 FDBA  
                                    l33 FA6C                                      l43 FAA0  
                                    l28 FA04                                      l38 FA38  
                                    l95 FC86                                      l88 FD1E  
               __size_of_relay_turn_off 0080                                     l102 FC06  
                                   l150 FF36                                     l250 F964  
                                   l181 FB10                                     l253 F94A  
                                   l261 FDEC                                     l256 F97E  
                                   l169 FFFE                                     u600 FE82  
                                   u601 FE7E                                     u700 FAC6  
                                   u701 FAC2                                     u614 FE98  
                                   u630 FC1A                                     u615 FE94  
                                   u631 FC16                                     u624 FEDE  
                                   u800 FB60                                     u720 FC9A  
                                   u640 FC38                                     u625 FEDA  
                                   u801 FB5C                                     u721 FC96  
                                   u641 FC34                                     u714 FAFC  
                                   u810 FD32                                     u570 FF4A  
                                   u730 FCB8                                     u650 FC56  
                                   u715 FAF8                                     u811 FD2E  
                                   u571 FF46                                     u731 FCB4  
                                   u651 FC52                                     u820 FD50  
                                   u740 FCD6                                     u660 FB9A  
                                   u821 FD4C                                     u741 FCD2  
                                   u661 FB96                                     u830 FD6E  
                                   u670 FBB8                                     u750 FA4C  
                                   u831 FD6A                                     u671 FBB4  
                                   u751 FA48                                     u584 FF60  
                                   u840 F9E4                                     u680 FBD6  
                                   u760 FA18                                     u585 FF5C  
                                   u841 F9E0                                     u681 FBD2  
                                   u761 FA14                                     u690 FAB4  
                                   u594 FFA6                                     u770 FA80  
                                   u691 FAB0                                     u595 FFA2  
                                   u771 FA7C                                     u780 FB24  
                                   u940 FE24                                     u781 FB20  
                                   u941 FE20                                     u790 FB42  
                                   u950 FE34                                     u791 FB3E  
                                   u951 FE30                                     u960 FE4C  
                                   u961 FE48                                     u970 FE5C  
                                   u971 FE58                                     prod 000FF3  
           __size_of_robot_move_forward 001A            __size_of_robot_move_backward 001A  
                                  l1403 FF4E                                    l1421 FE72  
                                  l1405 FF90                                    l1413 FFD4  
                                  l1501 FD1E                                    l1407 FF94  
                                  l1433 FF0C                                    l1441 FC08  
                                  l1521 FA06                                    l1513 FA50  
                                  l1505 FA3A                                    l1427 FE86  
                                  l1419 FE72                                    l1451 FC7C  
                                  l1443 FC1A                                    l1515 FA6C  
                                  l1507 FA3A                                    l1429 FECC  
                                  l1461 FB9A                                    l1453 FC86  
                                  l1445 FC38                                    l1541 FA84  
                                  l1533 FA6E                                    l1551 FB24  
                                  l1471 FC06                                    l1463 FBB8  
                                  l1439 FC08                                    l1527 FA1C  
                                  l1519 FA06                                    l1543 FAA0  
                                  l1535 FA6E                                    l1553 FB42  
                                  l1457 FB88                                    l1449 FC5A  
                                  l1529 FA38                                    l1483 FACA  
                                  l1475 FAA4                                    l1563 FD20  
                                  l1547 FB12                                    l1395 FF3A  
                                  l1491 FC88                                    l1467 FBDA  
                                  l1459 FB88                                    l1485 FB10  
                                  l1477 FAA4                                    l1573 FD72  
                                  l1565 FD20                                    l1557 FB64  
                                  l1549 FB12                                    l1397 FF3A  
                                  l1493 FC9A                                    l1581 F9D2  
                                  l1469 FBFC                                    l1661 FE3C  
                                  l1653 FDBC                                    l1479 FAB4  
                                  l1575 FD98                                    l1567 FD32  
                                  l1559 FB86                                    l1495 FCB8  
                                  l1591 FA04                                    l1583 F9D2  
                                  l1663 FE4C                                    l1655 FE14  
                                  l1577 FDBA                                    l1569 FD50  
                                  l1489 FC88                                    l1665 FE5C  
                                  l1657 FE24                                    l1499 FCDA  
                                  l1595 F94C                                    l1667 FE64  
                                  l1659 FE34                                    l1677 FFE8  
                                  l1589 F9E8                                    l1597 F932  
                                  l1679 FF20                                    l1599 F966  
                                  _LATA 000F89                                    _LATB 000F8A  
                                  _LATC 000F8B                                    _LATD 000F8C  
                                  _LATE 000F8D                                    _btn1 0024  
                                  _btn2 0023                                    _main FDBC  
                                  fsr2h 000FDA                                    indf2 000FDF  
                                  fsr1l 000FE1                   relay_initialize@relay 002E  
                                  fsr2l 000FD9                                    prodl 000FF3  
                                  start 0000                __size_of_robot_move_stop 001A  
                          ___param_bank 000000       gpio_pin_direction_initialize@port 002D  
                  _gpio_pin_write_value FF38                                   ?_main 0025  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _PORTD 000F83  
                                 _PORTE 000F84                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                                 tablat 000FF5                     relay_turn_off@relay 002E  
                                 status 000FD8                       _button_get_status FD20  
        ?_gpio_pin_direction_initialize 0025                      ?_button_get_status 002E  
                       __initialization F9A4                   __end_of_relay_turn_on FC88  
                          __end_of_main FE70                   ?_gpio_pin_write_value 0025  
                   ??_button_get_status 0032             __end_of_dc_motor_initialize FA06  
                                ??_main 0035                           __activetblptr 000002  
                     _button_initialize FB12            __size_of_gpio_pin_read_value 0070  
                    ?_button_initialize 002E               __end_of_button_get_status FDBC  
         __size_of_dc_motor_rotate_left 0034                           _tris_register 0015  
                   ??_button_initialize 0030                       ??_robot_move_stop 0035  
                        _relay_turn_off FB88                            __pdataCOMRAM 0001  
             __end_of_button_initialize FB88                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                     ?_relay_initialize 002E                      ??_relay_initialize 0030  
              gpio_pin_read_value@logic 0026                              __accesstop 0060  
               __end_of__initialization F9C8                           ___rparam_used 000001  
                        __pcstackCOMRAM 0025                  ??_gpio_pin_write_value 0027  
                   _robot_move_backward F932                    button_initialize@btn 002E  
                __end_of_relay_turn_off FC08                    ?_robot_move_backward 0025  
                 _dc_motor_rotate_right FA3A              __size_of_button_get_status 009C  
                       ?_relay_turn_off 002E              __end_of_robot_move_forward F966  
            __size_of_button_initialize 0076                   ??_robot_move_backward 0035  
                __size_of_dc_motor_stop 0034                                 __Hparam 0000  
                               __Lparam 0000                     _gpio_pin_read_value FAA2  
                               __pcinit F9A4                                 __ramtop 1000  
                               __ptext0 FDBC                                 __ptext1 F966  
                               __ptext2 FA6E                                 __ptext3 F94C  
                               __ptext4 FA3A                                 __ptext5 F932  
                               __ptext6 FA06                                 __ptext7 FC08  
                               __ptext8 FB88                                 __ptext9 F9D2  
          dc_motor_rotate_left@dc_motor 0032         ??_gpio_pin_direction_initialize 0027  
                ?_dc_motor_rotate_right 0032                    ?_gpio_pin_read_value 0025  
                  end_of_initialization F9C8                           __Lmediumconst 0000  
                       _robot_move_stop F966                           _dc_motor_stop FA6E  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc2 000FDE  
          __end_of_dc_motor_rotate_left FA3A            __size_of_dc_motor_initialize 0034  
                 ??_gpio_pin_read_value 0028                  __size_of_relay_turn_on 0080  
                        ?_dc_motor_stop 0032               __size_of_relay_initialize 0098  
gpio_pin_direction_initialize@direction 0026                           __pidataCOMRAM F980  
                    relay_turn_on@relay 002E                     start_initialization F9A4  
                  button_get_status@btn 002E   __end_of_gpio_pin_direction_initialize FF38  
__size_of_gpio_pin_direction_initialize 00C8           _gpio_pin_direction_initialize FE70  
                          _lat_register 000B                 __end_of_robot_move_stop F980  
                      ??_relay_turn_off 0030                gpio_pin_write_value@port 002D  
                         _relay_turn_on FC08           __size_of_gpio_pin_write_value 00C8  
                           _dc_motor1_1 0021                             _dc_motor1_2 001F  
               gpio_pin_read_value@port 002D                             __pbssCOMRAM 0035  
         dc_motor_rotate_right@dc_motor 0032                             _btn1_status 0036  
                           _btn2_status 0035                    _dc_motor_rotate_left FA06  
                    _robot_move_forward F94C                         ??_dc_motor_stop 0034  
                   ?_robot_move_forward 0025                          ?_relay_turn_on 002E  
           __end_of_robot_move_backward F94C                 ??_dc_motor_rotate_right 0034  
                  ??_robot_move_forward 0035                        ?_robot_move_stop 0025  
                 ?_dc_motor_rotate_left 0032                        _relay_initialize FC88  
                   _dc_motor_initialize F9D2        gpio_pin_direction_initialize@pin 0025  
                  ?_dc_motor_initialize 0032                               copy_data0 F9B8  
             gpio_pin_write_value@logic 0026                                __Hrparam 0000  
                       ??_relay_turn_on 0030                 gpio_pin_write_value@pin 0025  
                              __Lrparam 0000                   dc_motor_stop@dc_motor 0032  
                gpio_pin_read_value@pin 0025             __end_of_gpio_pin_read_value FB12  
                 ??_dc_motor_initialize 0034                                __ptext10 FC88  
                              __ptext11 FF38                                __ptext12 FB12  
                              __ptext13 FE70                                __ptext14 FD20  
                              __ptext15 FAA2                  ??_dc_motor_rotate_left 0034  
                         __size_of_main 00B4             dc_motor_initialize@dc_motor 0032  
          __end_of_gpio_pin_write_value 0000          __size_of_dc_motor_rotate_right 0034  
           button_get_status@btn_status 0030           __end_of_dc_motor_rotate_right FA6E  
              __end_of_relay_initialize FD20                           _port_register 0001  
                 __end_of_dc_motor_stop FAA2  
