

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 01 15:03:11 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 05/05/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F46K20 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  00FBC2                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _port_register
    61  00FBC2  80                 	db	128
    62  00FBC3  0F                 	db	15
    63  00FBC4  81                 	db	129
    64  00FBC5  0F                 	db	15
    65  00FBC6  82                 	db	130
    66  00FBC7  0F                 	db	15
    67  00FBC8  83                 	db	131
    68  00FBC9  0F                 	db	15
    69  00FBCA  84                 	db	132
    70  00FBCB  0F                 	db	15
    71                           
    72                           ;initializer for _lat_register
    73  00FBCC  89                 	db	137
    74  00FBCD  0F                 	db	15
    75  00FBCE  8A                 	db	138
    76  00FBCF  0F                 	db	15
    77  00FBD0  8B                 	db	139
    78  00FBD1  0F                 	db	15
    79  00FBD2  8C                 	db	140
    80  00FBD3  0F                 	db	15
    81  00FBD4  8D                 	db	141
    82  00FBD5  0F                 	db	15
    83                           
    84                           ;initializer for _tris_register
    85  00FBD6  92                 	db	146
    86  00FBD7  0F                 	db	15
    87  00FBD8  93                 	db	147
    88  00FBD9  0F                 	db	15
    89  00FBDA  94                 	db	148
    90  00FBDB  0F                 	db	15
    91  00FBDC  95                 	db	149
    92  00FBDD  0F                 	db	15
    93  00FBDE  96                 	db	150
    94  00FBDF  0F                 	db	15
    95                           
    96                           ;initializer for _led_seq
    97  00FBE0  01                 	db	1
    98  00FBE1  00                 	db	0
    99  00FBE2  00                 	db	0
   100  00FBE3  00                 	db	0
   101  00FBE4  00                 	db	0
   102  00FBE5  00                 	db	0
   103  00FBE6  00                 	db	0
   104  00FBE7  01                 	db	1
   105  00FBE8  01                 	db	1
   106  00FBE9  01                 	db	1
   107  00FBEA  00                 	db	0
   108  00FBEB  00                 	db	0
   109  00FBEC  00                 	db	0
   110  00FBED  00                 	db	0
   111  00FBEE  01                 	db	1
   112  00FBEF  01                 	db	1
   113  00FBF0  01                 	db	1
   114  00FBF1  01                 	db	1
   115  00FBF2  01                 	db	1
   116  00FBF3  00                 	db	0
   117  00FBF4  00                 	db	0
   118  00FBF5  01                 	db	1
   119  00FBF6  01                 	db	1
   120  00FBF7  01                 	db	1
   121  00FBF8  01                 	db	1
   122  00FBF9  01                 	db	1
   123  00FBFA  01                 	db	1
   124  00FBFB  01                 	db	1
   125  00FBFC  01                 	db	1
   126  00FBFD  01                 	db	1
   127  00FBFE  01                 	db	1
   128  00FBFF  01                 	db	1
   129                           
   130                           ;initializer for _led_array
   131  00FC00  02                 	db	2
   132  00FC01  12                 	db	18
   133  00FC02  22                 	db	34
   134  00FC03  32                 	db	50
   135  00FC04  42                 	db	66
   136  00FC05  52                 	db	82
   137  00FC06  62                 	db	98
   138  00FC07  72                 	db	114
   139  0000                     _PORTE	set	3972
   140  0000                     _PORTD	set	3971
   141  0000                     _PORTC	set	3970
   142  0000                     _PORTB	set	3969
   143  0000                     _PORTA	set	3968
   144  0000                     _LATE	set	3981
   145  0000                     _LATD	set	3980
   146  0000                     _LATC	set	3979
   147  0000                     _LATB	set	3978
   148  0000                     _LATA	set	3977
   149  0000                     _TRISE	set	3990
   150  0000                     _TRISD	set	3989
   151  0000                     _TRISC	set	3988
   152  0000                     _TRISB	set	3987
   153  0000                     _TRISA	set	3986
   154                           
   155                           ; #config settings
   156                           
   157                           	psect	cinit
   158  00FB98                     __pcinit:
   159                           	callstack 0
   160  00FB98                     start_initialization:
   161                           	callstack 0
   162  00FB98                     __initialization:
   163                           	callstack 0
   164                           
   165                           ; Initialize objects allocated to COMRAM (70 bytes)
   166                           ; load TBLPTR registers with __pidataCOMRAM
   167  00FB98  0EC2               	movlw	low __pidataCOMRAM
   168  00FB9A  6EF6               	movwf	tblptrl,c
   169  00FB9C  0EFB               	movlw	high __pidataCOMRAM
   170  00FB9E  6EF7               	movwf	tblptrh,c
   171  00FBA0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   172  00FBA2  6EF8               	movwf	tblptru,c
   173  00FBA4  EE00  F001         	lfsr	0,__pdataCOMRAM
   174  00FBA8  EE10 F046          	lfsr	1,70
   175  00FBAC                     copy_data0:
   176  00FBAC  0009               	tblrd		*+
   177  00FBAE  CFF5 FFEE          	movff	tablat,postinc0
   178  00FBB2  50E5               	movf	postdec1,w,c
   179  00FBB4  50E1               	movf	fsr1l,w,c
   180  00FBB6  E1FA               	bnz	copy_data0
   181  00FBB8                     end_of_initialization:
   182                           	callstack 0
   183  00FBB8                     __end_of__initialization:
   184                           	callstack 0
   185  00FBB8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   186  00FBBA  6EF8               	movwf	tblptru,c
   187  00FBBC  0100               	movlb	0
   188  00FBBE  EFBC  F07D         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	dataCOMRAM
   191  000001                     __pdataCOMRAM:
   192                           	callstack 0
   193  000001                     _port_register:
   194                           	callstack 0
   195  000001                     	ds	10
   196  00000B                     _lat_register:
   197                           	callstack 0
   198  00000B                     	ds	10
   199  000015                     _tris_register:
   200                           	callstack 0
   201  000015                     	ds	10
   202  00001F                     _led_seq:
   203                           	callstack 0
   204  00001F                     	ds	32
   205  00003F                     _led_array:
   206                           	callstack 0
   207  00003F                     	ds	8
   208                           
   209                           	psect	cstackCOMRAM
   210  000047                     __pcstackCOMRAM:
   211                           	callstack 0
   212  000047                     gpio_pin_direction_initialize@pin:
   213                           	callstack 0
   214  000047                     gpio_pin_write_value@pin:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x0
   218  000047                     	ds	1
   219  000048                     gpio_pin_direction_initialize@direction:
   220                           	callstack 0
   221  000048                     gpio_pin_write_value@logic:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x1
   225  000048                     	ds	1
   226  000049                     ??_gpio_pin_direction_initialize:
   227  000049                     ??_gpio_pin_write_value:
   228                           
   229                           ; 1 bytes @ 0x2
   230  000049                     	ds	6
   231  00004F                     gpio_pin_direction_initialize@port:
   232                           	callstack 0
   233  00004F                     gpio_pin_write_value@port:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x8
   237  00004F                     	ds	1
   238  000050                     led_initalize@led:
   239                           	callstack 0
   240  000050                     led_turn_on@led:
   241                           	callstack 0
   242  000050                     led_turn_off@led:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x9
   246  000050                     	ds	2
   247  000052                     ??_led_initalize:
   248  000052                     ??_led_turn_on:
   249  000052                     ??_led_turn_off:
   250                           
   251                           ; 1 bytes @ 0xB
   252  000052                     	ds	2
   253  000054                     perform_led_seq@led_arr:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0xD
   257  000054                     	ds	2
   258  000056                     perform_led_seq@led_pat:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0xF
   262  000056                     	ds	2
   263  000058                     perform_led_seq@seq_len:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x11
   267  000058                     	ds	1
   268  000059                     ??_perform_led_seq:
   269                           
   270                           ; 1 bytes @ 0x12
   271  000059                     	ds	3
   272  00005C                     perform_led_seq@l_led_counter:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x15
   276  00005C                     	ds	1
   277  00005D                     perform_led_seq@l_led_pos:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x16
   281  00005D                     	ds	1
   282  00005E                     
   283                           ; 1 bytes @ 0x17
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   286 ;;
   287 ;; *************** function _main *****************
   288 ;; Defined at:
   289 ;;		line 63 in file "application.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;		None
   292 ;; Auto vars:     Size  Location     Type
   293 ;;		None
   294 ;; Return value:  Size  Location     Type
   295 ;;                  2  252[None  ] int 
   296 ;; Registers used:
   297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;Total ram usage:        0 bytes
   308 ;; Hardware stack levels required when called:    3
   309 ;; This function calls:
   310 ;;		_perform_led_seq
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text0
   317  00FB78                     __ptext0:
   318                           	callstack 0
   319  00FB78                     _main:
   320                           	callstack 28
   321  00FB78                     l253:
   322  00FB78                     
   323                           ;application.c: 70:         perform_led_seq( led_array , led_seq ,8 );
   324  00FB78  0E3F               	movlw	low _led_array
   325  00FB7A  6E54               	movwf	perform_led_seq@led_arr^0,c
   326  00FB7C  0E00               	movlw	high _led_array
   327  00FB7E  6E55               	movwf	(perform_led_seq@led_arr+1)^0,c
   328  00FB80  0E1F               	movlw	low _led_seq
   329  00FB82  6E56               	movwf	perform_led_seq@led_pat^0,c
   330  00FB84  0E00               	movlw	high _led_seq
   331  00FB86  6E57               	movwf	(perform_led_seq@led_pat+1)^0,c
   332  00FB88  0E08               	movlw	8
   333  00FB8A  6E58               	movwf	perform_led_seq@seq_len^0,c
   334  00FB8C  EC98  F07F         	call	_perform_led_seq	;wreg free
   335  00FB90  EFBC  F07D         	goto	l253
   336  00FB94  EF00  F000         	goto	start
   337  00FB98                     __end_of_main:
   338                           	callstack 0
   339                           
   340 ;; *************** function _perform_led_seq *****************
   341 ;; Defined at:
   342 ;;		line 37 in file "application.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  led_arr         2   13[COMRAM] PTR struct .
   345 ;;		 -> led_array(8), 
   346 ;;  led_pat         2   15[COMRAM] PTR unsigned char [8]
   347 ;;		 -> led_seq(32), 
   348 ;;  seq_len         1   17[COMRAM] unsigned char 
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  l_led_pos       1   22[COMRAM] unsigned char 
   351 ;;  l_led_counte    1   21[COMRAM] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   361 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;Total ram usage:       10 bytes
   366 ;; Hardware stack levels used:    1
   367 ;; Hardware stack levels required when called:    2
   368 ;; This function calls:
   369 ;;		_led_initalize
   370 ;;		_led_turn_off
   371 ;;		_led_turn_on
   372 ;; This function is called by:
   373 ;;		_main
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377                           	psect	text1
   378  00FF30                     __ptext1:
   379                           	callstack 0
   380  00FF30                     _perform_led_seq:
   381                           	callstack 28
   382  00FF30                     
   383                           ;application.c: 39:     uint8_t l_led_counter = 0 , l_led_pos =0 ;
   384  00FF30  0E00               	movlw	0
   385  00FF32  6E5C               	movwf	perform_led_seq@l_led_counter^0,c
   386                           
   387                           ;application.c: 40:     for(l_led_counter= 0 ; l_led_counter <seq_len; l_led_counter ++ 
      +                          ){
   388  00FF34  0E00               	movlw	0
   389  00FF36  6E5C               	movwf	perform_led_seq@l_led_counter^0,c
   390  00FF38  EFA7  F07F         	goto	l1495
   391  00FF3C                     l1491:
   392                           
   393                           ;application.c: 41:         led_initalize(&led_arr[l_led_counter]);
   394  00FF3C  505C               	movf	perform_led_seq@l_led_counter^0,w,c
   395  00FF3E  2454               	addwf	perform_led_seq@led_arr^0,w,c
   396  00FF40  6E50               	movwf	led_initalize@led^0,c
   397  00FF42  0E00               	movlw	0
   398  00FF44  2055               	addwfc	(perform_led_seq@led_arr+1)^0,w,c
   399  00FF46  6E51               	movwf	(led_initalize@led+1)^0,c
   400  00FF48  EC84  F07E         	call	_led_initalize	;wreg free
   401  00FF4C                     
   402                           ;application.c: 42:     }
   403  00FF4C  2A5C               	incf	perform_led_seq@l_led_counter^0,f,c
   404  00FF4E                     l1495:
   405  00FF4E  5058               	movf	perform_led_seq@seq_len^0,w,c
   406  00FF50  5C5C               	subwf	perform_led_seq@l_led_counter^0,w,c
   407  00FF52  A0D8               	btfss	status,0,c
   408  00FF54  EFAE  F07F         	goto	u721
   409  00FF58  EFB0  F07F         	goto	u720
   410  00FF5C                     u721:
   411  00FF5C  EF9E  F07F         	goto	l1491
   412  00FF60                     u720:
   413  00FF60                     
   414                           ;application.c: 44:     for (l_led_counter= 0 ; l_led_counter <seq_len; l_led_counter ++
      +                           ){
   415  00FF60  0E00               	movlw	0
   416  00FF62  6E5C               	movwf	perform_led_seq@l_led_counter^0,c
   417  00FF64  EFF6  F07F         	goto	l241
   418  00FF68                     l1499:
   419                           
   420                           ;application.c: 47:         for(l_led_pos=0 ; l_led_pos <8 ;l_led_pos ++){
   421  00FF68  0E00               	movlw	0
   422  00FF6A  6E5D               	movwf	perform_led_seq@l_led_pos^0,c
   423  00FF6C                     l1505:
   424                           
   425                           ;application.c: 49:             if (led_pat [l_led_counter][l_led_pos] == 1){
   426  00FF6C  505C               	movf	perform_led_seq@l_led_counter^0,w,c
   427  00FF6E  0D08               	mullw	8
   428  00FF70  C056  F059         	movff	perform_led_seq@led_pat,??_perform_led_seq
   429  00FF74  C057  F05A         	movff	perform_led_seq@led_pat+1,??_perform_led_seq+1
   430  00FF78  50F3               	movf	243,w,c
   431  00FF7A  2659               	addwf	??_perform_led_seq^0,f,c
   432  00FF7C  50F4               	movf	244,w,c
   433  00FF7E  225A               	addwfc	(??_perform_led_seq+1)^0,f,c
   434  00FF80  505D               	movf	perform_led_seq@l_led_pos^0,w,c
   435  00FF82  2459               	addwf	??_perform_led_seq^0,w,c
   436  00FF84  6ED9               	movwf	fsr2l,c
   437  00FF86  0E00               	movlw	0
   438  00FF88  205A               	addwfc	(??_perform_led_seq+1)^0,w,c
   439  00FF8A  6EDA               	movwf	fsr2h,c
   440  00FF8C  04DE               	decf	postinc2,w,c
   441  00FF8E  A4D8               	btfss	status,2,c
   442  00FF90  EFCC  F07F         	goto	u731
   443  00FF94  EFCE  F07F         	goto	u730
   444  00FF98                     u731:
   445  00FF98  EFD8  F07F         	goto	l1509
   446  00FF9C                     u730:
   447  00FF9C                     
   448                           ;application.c: 50:                 led_turn_on(&led_arr[l_led_pos]);
   449  00FF9C  505D               	movf	perform_led_seq@l_led_pos^0,w,c
   450  00FF9E  2454               	addwf	perform_led_seq@led_arr^0,w,c
   451  00FFA0  6E50               	movwf	led_turn_on@led^0,c
   452  00FFA2  0E00               	movlw	0
   453  00FFA4  2055               	addwfc	(perform_led_seq@led_arr+1)^0,w,c
   454  00FFA6  6E51               	movwf	(led_turn_on@led+1)^0,c
   455  00FFA8  EC44  F07E         	call	_led_turn_on	;wreg free
   456                           
   457                           ;application.c: 52:             }
   458  00FFAC  EFE0  F07F         	goto	l1511
   459  00FFB0                     l1509:
   460                           
   461                           ;application.c: 54:                 led_turn_off(&led_arr[l_led_pos]);
   462  00FFB0  505D               	movf	perform_led_seq@l_led_pos^0,w,c
   463  00FFB2  2454               	addwf	perform_led_seq@led_arr^0,w,c
   464  00FFB4  6E50               	movwf	led_turn_off@led^0,c
   465  00FFB6  0E00               	movlw	0
   466  00FFB8  2055               	addwfc	(perform_led_seq@led_arr+1)^0,w,c
   467  00FFBA  6E51               	movwf	(led_turn_off@led+1)^0,c
   468  00FFBC  EC04  F07E         	call	_led_turn_off	;wreg free
   469  00FFC0                     l1511:
   470                           
   471                           ;application.c: 56:         }
   472  00FFC0  2A5D               	incf	perform_led_seq@l_led_pos^0,f,c
   473  00FFC2  0E07               	movlw	7
   474  00FFC4  645D               	cpfsgt	perform_led_seq@l_led_pos^0,c
   475  00FFC6  EFE7  F07F         	goto	u741
   476  00FFCA  EFE9  F07F         	goto	u740
   477  00FFCE                     u741:
   478  00FFCE  EFB6  F07F         	goto	l1505
   479  00FFD2                     u740:
   480  00FFD2                     
   481                           ;application.c: 58:         _delay((unsigned long)((150)*(8000000UL/4000.0)));
   482  00FFD2  0E02               	movlw	2
   483  00FFD4  6E5A               	movwf	(??_perform_led_seq+1)^0,c
   484  00FFD6  0E86               	movlw	134
   485  00FFD8  6E59               	movwf	??_perform_led_seq^0,c
   486  00FFDA  0E99               	movlw	153
   487  00FFDC                     u927:
   488  00FFDC  2EE8               	decfsz	wreg,f,c
   489  00FFDE  D7FE               	bra	u927
   490  00FFE0  2E59               	decfsz	??_perform_led_seq^0,f,c
   491  00FFE2  D7FC               	bra	u927
   492  00FFE4  2E5A               	decfsz	(??_perform_led_seq+1)^0,f,c
   493  00FFE6  D7FA               	bra	u927
   494  00FFE8  F000               	nop	
   495  00FFEA                     
   496                           ;application.c: 59:     }
   497  00FFEA  2A5C               	incf	perform_led_seq@l_led_counter^0,f,c
   498  00FFEC                     l241:
   499  00FFEC  5058               	movf	perform_led_seq@seq_len^0,w,c
   500  00FFEE  5C5C               	subwf	perform_led_seq@l_led_counter^0,w,c
   501  00FFF0  A0D8               	btfss	status,0,c
   502  00FFF2  EFFD  F07F         	goto	u751
   503  00FFF6  EFFF  F07F         	goto	u750
   504  00FFFA                     u751:
   505  00FFFA  EFB4  F07F         	goto	l1499
   506  00FFFE                     u750:
   507  00FFFE  0012               	return		;funcret
   508  010000                     __end_of_perform_led_seq:
   509                           	callstack 0
   510                           
   511 ;; *************** function _led_turn_on *****************
   512 ;; Defined at:
   513 ;;		line 32 in file "ecu/led/ecu_led.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  led             2    9[COMRAM] PTR struct .
   516 ;;		 -> led_array(8), 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  ret             1    0        enum E329
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      enum E329
   521 ;; Registers used:
   522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;Total ram usage:        4 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; Hardware stack levels required when called:    1
   535 ;; This function calls:
   536 ;;		_gpio_pin_write_value
   537 ;; This function is called by:
   538 ;;		_perform_led_seq
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text2
   543  00FC88                     __ptext2:
   544                           	callstack 0
   545  00FC88                     _led_turn_on:
   546                           	callstack 28
   547  00FC88                     
   548                           ;ecu/led/ecu_led.c: 34:     if ( (((void*)0) == led ) || ( led ->port_name > 5U -1 )
   549  00FC88  5050               	movf	led_turn_on@led^0,w,c
   550  00FC8A  1051               	iorwf	(led_turn_on@led+1)^0,w,c
   551  00FC8C  B4D8               	btfsc	status,2,c
   552  00FC8E  EF4B  F07E         	goto	u661
   553  00FC92  EF4D  F07E         	goto	u660
   554  00FC96                     u661:
   555  00FC96  EF83  F07E         	goto	l63
   556  00FC9A                     u660:
   557  00FC9A  C050  FFD9         	movff	led_turn_on@led,fsr2l
   558  00FC9E  C051  FFDA         	movff	led_turn_on@led+1,fsr2h
   559  00FCA2  50DF               	movf	indf2,w,c
   560  00FCA4  0B0F               	andlw	15
   561  00FCA6  6E52               	movwf	??_led_turn_on^0,c
   562  00FCA8  0E05               	movlw	5
   563  00FCAA  6052               	cpfslt	??_led_turn_on^0,c
   564  00FCAC  EF5A  F07E         	goto	u671
   565  00FCB0  EF5C  F07E         	goto	u670
   566  00FCB4                     u671:
   567  00FCB4  EF83  F07E         	goto	l63
   568  00FCB8                     u670:
   569  00FCB8  C050  FFD9         	movff	led_turn_on@led,fsr2l
   570  00FCBC  C051  FFDA         	movff	led_turn_on@led+1,fsr2h
   571  00FCC0  38DF               	swapf	indf2,w,c
   572  00FCC2  0B07               	andlw	7
   573  00FCC4  6E52               	movwf	??_led_turn_on^0,c
   574  00FCC6  0E07               	movlw	7
   575  00FCC8  6452               	cpfsgt	??_led_turn_on^0,c
   576  00FCCA  EF69  F07E         	goto	u681
   577  00FCCE  EF6B  F07E         	goto	u680
   578  00FCD2                     u681:
   579  00FCD2  EF6D  F07E         	goto	l1463
   580  00FCD6                     u680:
   581  00FCD6  EF83  F07E         	goto	l63
   582  00FCDA                     l1463:
   583                           
   584                           ;ecu/led/ecu_led.c: 41:         gpio_pin_write_value(led->port_name , led->pin , HIGH );
   585  00FCDA  C050  FFD9         	movff	led_turn_on@led,fsr2l
   586  00FCDE  C051  FFDA         	movff	led_turn_on@led+1,fsr2h
   587  00FCE2  38DF               	swapf	indf2,w,c
   588  00FCE4  0B07               	andlw	7
   589  00FCE6  6E47               	movwf	gpio_pin_write_value@pin^0,c
   590  00FCE8  0E01               	movlw	1
   591  00FCEA  6E48               	movwf	gpio_pin_write_value@logic^0,c
   592  00FCEC  C050  FFD9         	movff	led_turn_on@led,fsr2l
   593  00FCF0  C051  FFDA         	movff	led_turn_on@led+1,fsr2h
   594  00FCF4  50DF               	movf	indf2,w,c
   595  00FCF6  0B0F               	andlw	15
   596  00FCF8  EC34  F07F         	call	_gpio_pin_write_value
   597  00FCFC                     
   598                           ;ecu/led/ecu_led.c: 42:         led->led_status = LED_ON;
   599  00FCFC  C050  FFD9         	movff	led_turn_on@led,fsr2l
   600  00FD00  C051  FFDA         	movff	led_turn_on@led+1,fsr2h
   601  00FD04  8EDF               	bsf	indf2,7,c
   602  00FD06                     l63:
   603  00FD06  0012               	return		;funcret
   604  00FD08                     __end_of_led_turn_on:
   605                           	callstack 0
   606                           
   607 ;; *************** function _led_turn_off *****************
   608 ;; Defined at:
   609 ;;		line 50 in file "ecu/led/ecu_led.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  led             2    9[COMRAM] PTR struct .
   612 ;;		 -> led_array(8), 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;  ret             1    0        enum E329
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      enum E329
   617 ;; Registers used:
   618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;Total ram usage:        4 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    1
   631 ;; This function calls:
   632 ;;		_gpio_pin_write_value
   633 ;; This function is called by:
   634 ;;		_perform_led_seq
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text3
   639  00FC08                     __ptext3:
   640                           	callstack 0
   641  00FC08                     _led_turn_off:
   642                           	callstack 28
   643  00FC08                     
   644                           ;ecu/led/ecu_led.c: 53:     if ( (((void*)0) == led ) || ( led ->port_name > 5U -1 )
   645  00FC08  5050               	movf	led_turn_off@led^0,w,c
   646  00FC0A  1051               	iorwf	(led_turn_off@led+1)^0,w,c
   647  00FC0C  B4D8               	btfsc	status,2,c
   648  00FC0E  EF0B  F07E         	goto	u691
   649  00FC12  EF0D  F07E         	goto	u690
   650  00FC16                     u691:
   651  00FC16  EF43  F07E         	goto	l70
   652  00FC1A                     u690:
   653  00FC1A  C050  FFD9         	movff	led_turn_off@led,fsr2l
   654  00FC1E  C051  FFDA         	movff	led_turn_off@led+1,fsr2h
   655  00FC22  50DF               	movf	indf2,w,c
   656  00FC24  0B0F               	andlw	15
   657  00FC26  6E52               	movwf	??_led_turn_off^0,c
   658  00FC28  0E05               	movlw	5
   659  00FC2A  6052               	cpfslt	??_led_turn_off^0,c
   660  00FC2C  EF1A  F07E         	goto	u701
   661  00FC30  EF1C  F07E         	goto	u700
   662  00FC34                     u701:
   663  00FC34  EF43  F07E         	goto	l70
   664  00FC38                     u700:
   665  00FC38  C050  FFD9         	movff	led_turn_off@led,fsr2l
   666  00FC3C  C051  FFDA         	movff	led_turn_off@led+1,fsr2h
   667  00FC40  38DF               	swapf	indf2,w,c
   668  00FC42  0B07               	andlw	7
   669  00FC44  6E52               	movwf	??_led_turn_off^0,c
   670  00FC46  0E07               	movlw	7
   671  00FC48  6452               	cpfsgt	??_led_turn_off^0,c
   672  00FC4A  EF29  F07E         	goto	u711
   673  00FC4E  EF2B  F07E         	goto	u710
   674  00FC52                     u711:
   675  00FC52  EF2D  F07E         	goto	l1481
   676  00FC56                     u710:
   677  00FC56  EF43  F07E         	goto	l70
   678  00FC5A                     l1481:
   679                           
   680                           ;ecu/led/ecu_led.c: 60:         gpio_pin_write_value(led->port_name , led->pin , LOW );
   681  00FC5A  C050  FFD9         	movff	led_turn_off@led,fsr2l
   682  00FC5E  C051  FFDA         	movff	led_turn_off@led+1,fsr2h
   683  00FC62  38DF               	swapf	indf2,w,c
   684  00FC64  0B07               	andlw	7
   685  00FC66  6E47               	movwf	gpio_pin_write_value@pin^0,c
   686  00FC68  0E00               	movlw	0
   687  00FC6A  6E48               	movwf	gpio_pin_write_value@logic^0,c
   688  00FC6C  C050  FFD9         	movff	led_turn_off@led,fsr2l
   689  00FC70  C051  FFDA         	movff	led_turn_off@led+1,fsr2h
   690  00FC74  50DF               	movf	indf2,w,c
   691  00FC76  0B0F               	andlw	15
   692  00FC78  EC34  F07F         	call	_gpio_pin_write_value
   693  00FC7C                     
   694                           ;ecu/led/ecu_led.c: 61:         led->led_status = LED_OFF;
   695  00FC7C  C050  FFD9         	movff	led_turn_off@led,fsr2l
   696  00FC80  C051  FFDA         	movff	led_turn_off@led+1,fsr2h
   697  00FC84  9EDF               	bcf	indf2,7,c
   698  00FC86                     l70:
   699  00FC86  0012               	return		;funcret
   700  00FC88                     __end_of_led_turn_off:
   701                           	callstack 0
   702                           
   703 ;; *************** function _led_initalize *****************
   704 ;; Defined at:
   705 ;;		line 13 in file "ecu/led/ecu_led.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  led             2    9[COMRAM] PTR struct .
   708 ;;		 -> led_array(8), 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  ret             1    0        enum E329
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      enum E329
   713 ;; Registers used:
   714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;Total ram usage:        4 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    1
   727 ;; This function calls:
   728 ;;		_gpio_pin_direction_initialize
   729 ;;		_gpio_pin_write_value
   730 ;; This function is called by:
   731 ;;		_perform_led_seq
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text4
   736  00FD08                     __ptext4:
   737                           	callstack 0
   738  00FD08                     _led_initalize:
   739                           	callstack 28
   740  00FD08                     
   741                           ;ecu/led/ecu_led.c: 15:     if ( (((void*)0) == led ) || ( led ->port_name > 5U -1 )
   742  00FD08  5050               	movf	led_initalize@led^0,w,c
   743  00FD0A  1051               	iorwf	(led_initalize@led+1)^0,w,c
   744  00FD0C  B4D8               	btfsc	status,2,c
   745  00FD0E  EF8B  F07E         	goto	u631
   746  00FD12  EF8D  F07E         	goto	u630
   747  00FD16                     u631:
   748  00FD16  EFCF  F07E         	goto	l56
   749  00FD1A                     u630:
   750  00FD1A  C050  FFD9         	movff	led_initalize@led,fsr2l
   751  00FD1E  C051  FFDA         	movff	led_initalize@led+1,fsr2h
   752  00FD22  50DF               	movf	indf2,w,c
   753  00FD24  0B0F               	andlw	15
   754  00FD26  6E52               	movwf	??_led_initalize^0,c
   755  00FD28  0E05               	movlw	5
   756  00FD2A  6052               	cpfslt	??_led_initalize^0,c
   757  00FD2C  EF9A  F07E         	goto	u641
   758  00FD30  EF9C  F07E         	goto	u640
   759  00FD34                     u641:
   760  00FD34  EFCF  F07E         	goto	l56
   761  00FD38                     u640:
   762  00FD38  C050  FFD9         	movff	led_initalize@led,fsr2l
   763  00FD3C  C051  FFDA         	movff	led_initalize@led+1,fsr2h
   764  00FD40  38DF               	swapf	indf2,w,c
   765  00FD42  0B07               	andlw	7
   766  00FD44  6E52               	movwf	??_led_initalize^0,c
   767  00FD46  0E07               	movlw	7
   768  00FD48  6452               	cpfsgt	??_led_initalize^0,c
   769  00FD4A  EFA9  F07E         	goto	u651
   770  00FD4E  EFAB  F07E         	goto	u650
   771  00FD52                     u651:
   772  00FD52  EFAD  F07E         	goto	l1447
   773  00FD56                     u650:
   774  00FD56  EFCF  F07E         	goto	l56
   775  00FD5A                     l1447:
   776                           
   777                           ;ecu/led/ecu_led.c: 21:         gpio_pin_direction_initialize(led->port_name , led->pin 
      +                          , DIRECTION_OUTPUT);
   778  00FD5A  C050  FFD9         	movff	led_initalize@led,fsr2l
   779  00FD5E  C051  FFDA         	movff	led_initalize@led+1,fsr2h
   780  00FD62  38DF               	swapf	indf2,w,c
   781  00FD64  0B07               	andlw	7
   782  00FD66  6E47               	movwf	gpio_pin_direction_initialize@pin^0,c
   783  00FD68  0E00               	movlw	0
   784  00FD6A  6E48               	movwf	gpio_pin_direction_initialize@direction^0,c
   785  00FD6C  C050  FFD9         	movff	led_initalize@led,fsr2l
   786  00FD70  C051  FFDA         	movff	led_initalize@led+1,fsr2h
   787  00FD74  50DF               	movf	indf2,w,c
   788  00FD76  0B0F               	andlw	15
   789  00FD78  ECD0  F07E         	call	_gpio_pin_direction_initialize
   790                           
   791                           ;ecu/led/ecu_led.c: 22:         gpio_pin_write_value(led->port_name , led->pin , LOW );
   792  00FD7C  C050  FFD9         	movff	led_initalize@led,fsr2l
   793  00FD80  C051  FFDA         	movff	led_initalize@led+1,fsr2h
   794  00FD84  38DF               	swapf	indf2,w,c
   795  00FD86  0B07               	andlw	7
   796  00FD88  6E47               	movwf	gpio_pin_write_value@pin^0,c
   797  00FD8A  0E00               	movlw	0
   798  00FD8C  6E48               	movwf	gpio_pin_write_value@logic^0,c
   799  00FD8E  C050  FFD9         	movff	led_initalize@led,fsr2l
   800  00FD92  C051  FFDA         	movff	led_initalize@led+1,fsr2h
   801  00FD96  50DF               	movf	indf2,w,c
   802  00FD98  0B0F               	andlw	15
   803  00FD9A  EC34  F07F         	call	_gpio_pin_write_value
   804  00FD9E                     l56:
   805  00FD9E  0012               	return		;funcret
   806  00FDA0                     __end_of_led_initalize:
   807                           	callstack 0
   808                           
   809 ;; *************** function _gpio_pin_write_value *****************
   810 ;; Defined at:
   811 ;;		line 105 in file "mcal/gpio/mcal_gpio.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  port            1    wreg     enum E2858
   814 ;;  pin             1    0[COMRAM] enum E2848
   815 ;;  logic           1    1[COMRAM] enum E2840
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  port            1    8[COMRAM] enum E2858
   818 ;;  ret             1    0        enum E329
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      enum E329
   821 ;; Registers used:
   822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;Total ram usage:        9 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_led_initalize
   838 ;;		_led_turn_on
   839 ;;		_led_turn_off
   840 ;;		_relay_initialize
   841 ;;		_relay_turn_on
   842 ;;		_relay_turn_off
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text5
   847  00FE68                     __ptext5:
   848                           	callstack 0
   849  00FE68                     _gpio_pin_write_value:
   850                           	callstack 28
   851                           
   852                           ;incstack = 0
   853                           ;gpio_pin_write_value@port stored from wreg
   854  00FE68  6E4F               	movwf	gpio_pin_write_value@port^0,c
   855  00FE6A                     
   856                           ;mcal/gpio/mcal_gpio.c: 108:     if ( pin > 8U -1 || pin < 0 ){
   857  00FE6A  0E08               	movlw	8
   858  00FE6C  6047               	cpfslt	gpio_pin_write_value@pin^0,c
   859  00FE6E  EF3B  F07F         	goto	u601
   860  00FE72  EF3D  F07F         	goto	u600
   861  00FE76                     u601:
   862  00FE76  EF97  F07F         	goto	l169
   863  00FE7A                     u600:
   864  00FE7A  EF82  F07F         	goto	l1431
   865  00FE7E                     l1421:
   866                           
   867                           ;mcal/gpio/mcal_gpio.c: 115:                 (*lat_register[port] &= ~(1U << pin));
   868  00FE7E  C047  F049         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
   869  00FE82  0E01               	movlw	1
   870  00FE84  6E4A               	movwf	(??_gpio_pin_write_value+1)^0,c
   871  00FE86  2A49               	incf	??_gpio_pin_write_value^0,f,c
   872  00FE88  EF48  F07F         	goto	u614
   873  00FE8C                     u615:
   874  00FE8C  90D8               	bcf	status,0,c
   875  00FE8E  364A               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
   876  00FE90                     u614:
   877  00FE90  2E49               	decfsz	??_gpio_pin_write_value^0,f,c
   878  00FE92  EF46  F07F         	goto	u615
   879  00FE96  504A               	movf	(??_gpio_pin_write_value+1)^0,w,c
   880  00FE98  0AFF               	xorlw	255
   881  00FE9A  6E4B               	movwf	(??_gpio_pin_write_value+2)^0,c
   882  00FE9C  504F               	movf	gpio_pin_write_value@port^0,w,c
   883  00FE9E  0D02               	mullw	2
   884  00FEA0  0E0B               	movlw	low _lat_register
   885  00FEA2  24F3               	addwf	243,w,c
   886  00FEA4  6ED9               	movwf	fsr2l,c
   887  00FEA6  0E00               	movlw	high _lat_register
   888  00FEA8  20F4               	addwfc	prodh,w,c
   889  00FEAA  6EDA               	movwf	fsr2h,c
   890  00FEAC  CFDE F04C          	movff	postinc2,??_gpio_pin_write_value+3
   891  00FEB0  CFDD F04D          	movff	postdec2,??_gpio_pin_write_value+4
   892  00FEB4  C04C  FFD9         	movff	??_gpio_pin_write_value+3,fsr2l
   893  00FEB8  C04D  FFDA         	movff	??_gpio_pin_write_value+4,fsr2h
   894  00FEBC  504B               	movf	(??_gpio_pin_write_value+2)^0,w,c
   895  00FEBE  16DF               	andwf	indf2,f,c
   896  00FEC0                     
   897                           ;mcal/gpio/mcal_gpio.c: 117:                 break;
   898  00FEC0  EF97  F07F         	goto	l169
   899  00FEC4                     l1425:
   900                           
   901                           ;mcal/gpio/mcal_gpio.c: 121:                 (*lat_register[port] |= (1U << pin)); break
      +                          ;
   902  00FEC4  C047  F049         	movff	gpio_pin_write_value@pin,??_gpio_pin_write_value
   903  00FEC8  0E01               	movlw	1
   904  00FECA  6E4A               	movwf	(??_gpio_pin_write_value+1)^0,c
   905  00FECC  2A49               	incf	??_gpio_pin_write_value^0,f,c
   906  00FECE  EF6B  F07F         	goto	u624
   907  00FED2                     u625:
   908  00FED2  90D8               	bcf	status,0,c
   909  00FED4  364A               	rlcf	(??_gpio_pin_write_value+1)^0,f,c
   910  00FED6                     u624:
   911  00FED6  2E49               	decfsz	??_gpio_pin_write_value^0,f,c
   912  00FED8  EF69  F07F         	goto	u625
   913  00FEDC  504F               	movf	gpio_pin_write_value@port^0,w,c
   914  00FEDE  0D02               	mullw	2
   915  00FEE0  0E0B               	movlw	low _lat_register
   916  00FEE2  24F3               	addwf	243,w,c
   917  00FEE4  6ED9               	movwf	fsr2l,c
   918  00FEE6  0E00               	movlw	high _lat_register
   919  00FEE8  20F4               	addwfc	prodh,w,c
   920  00FEEA  6EDA               	movwf	fsr2h,c
   921  00FEEC  CFDE F04B          	movff	postinc2,??_gpio_pin_write_value+2
   922  00FEF0  CFDD F04C          	movff	postdec2,??_gpio_pin_write_value+3
   923  00FEF4  C04B  FFD9         	movff	??_gpio_pin_write_value+2,fsr2l
   924  00FEF8  C04C  FFDA         	movff	??_gpio_pin_write_value+3,fsr2h
   925  00FEFC  504A               	movf	(??_gpio_pin_write_value+1)^0,w,c
   926  00FEFE  12DF               	iorwf	indf2,f,c
   927  00FF00  EF97  F07F         	goto	l169
   928  00FF04                     l1431:
   929  00FF04  5048               	movf	gpio_pin_write_value@logic^0,w,c
   930  00FF06  6E49               	movwf	??_gpio_pin_write_value^0,c
   931  00FF08  6A4A               	clrf	(??_gpio_pin_write_value+1)^0,c
   932                           
   933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   934                           ; Switch size 1, requested type "simple"
   935                           ; Number of cases is 1, Range of values is 0 to 0
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte            4     3 (average)
   939                           ;	Chosen strategy is simple_byte
   940  00FF0A  504A               	movf	(??_gpio_pin_write_value+1)^0,w,c
   941  00FF0C  0A00               	xorlw	0	; case 0
   942  00FF0E  B4D8               	btfsc	status,2,c
   943  00FF10  EF8C  F07F         	goto	l1653
   944  00FF14  EF97  F07F         	goto	l169
   945  00FF18                     l1653:
   946                           
   947                           ; Switch size 1, requested type "simple"
   948                           ; Number of cases is 2, Range of values is 0 to 1
   949                           ; switch strategies available:
   950                           ; Name         Instructions Cycles
   951                           ; simple_byte            7     4 (average)
   952                           ;	Chosen strategy is simple_byte
   953  00FF18  5049               	movf	??_gpio_pin_write_value^0,w,c
   954  00FF1A  0A00               	xorlw	0	; case 0
   955  00FF1C  B4D8               	btfsc	status,2,c
   956  00FF1E  EF3F  F07F         	goto	l1421
   957  00FF22  0A01               	xorlw	1	; case 1
   958  00FF24  B4D8               	btfsc	status,2,c
   959  00FF26  EF62  F07F         	goto	l1425
   960  00FF2A  EF97  F07F         	goto	l169
   961  00FF2E                     l169:
   962  00FF2E  0012               	return		;funcret
   963  00FF30                     __end_of_gpio_pin_write_value:
   964                           	callstack 0
   965                           
   966 ;; *************** function _gpio_pin_direction_initialize *****************
   967 ;; Defined at:
   968 ;;		line 48 in file "mcal/gpio/mcal_gpio.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  port            1    wreg     enum E2858
   971 ;;  pin             1    0[COMRAM] enum E2848
   972 ;;  direction       1    1[COMRAM] enum E2844
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  port            1    8[COMRAM] enum E2858
   975 ;;  ret             1    0        enum E329
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      enum E329
   978 ;; Registers used:
   979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;Total ram usage:        9 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_led_initalize
   995 ;;		_button_initialize
   996 ;;		_relay_initialize
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text6
  1001  00FDA0                     __ptext6:
  1002                           	callstack 0
  1003  00FDA0                     _gpio_pin_direction_initialize:
  1004                           	callstack 28
  1005                           
  1006                           ;incstack = 0
  1007                           ;gpio_pin_direction_initialize@port stored from wreg
  1008  00FDA0  6E4F               	movwf	gpio_pin_direction_initialize@port^0,c
  1009  00FDA2                     
  1010                           ;mcal/gpio/mcal_gpio.c: 52:     if(pin > 8U -1 || pin < 0){
  1011  00FDA2  0E08               	movlw	8
  1012  00FDA4  6047               	cpfslt	gpio_pin_direction_initialize@pin^0,c
  1013  00FDA6  EFD7  F07E         	goto	u571
  1014  00FDAA  EFD9  F07E         	goto	u570
  1015  00FDAE                     u571:
  1016  00FDAE  EF33  F07F         	goto	l150
  1017  00FDB2                     u570:
  1018  00FDB2  EF1E  F07F         	goto	l1407
  1019  00FDB6                     l1401:
  1020                           
  1021                           ;mcal/gpio/mcal_gpio.c: 60:                 (*tris_register[port] &= ~(1U << pin)); brea
      +                          k;
  1022  00FDB6  C047  F049         	movff	gpio_pin_direction_initialize@pin,??_gpio_pin_direction_initialize
  1023  00FDBA  0E01               	movlw	1
  1024  00FDBC  6E4A               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1025  00FDBE  2A49               	incf	??_gpio_pin_direction_initialize^0,f,c
  1026  00FDC0  EFE4  F07E         	goto	u584
  1027  00FDC4                     u585:
  1028  00FDC4  90D8               	bcf	status,0,c
  1029  00FDC6  364A               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1030  00FDC8                     u584:
  1031  00FDC8  2E49               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1032  00FDCA  EFE2  F07E         	goto	u585
  1033  00FDCE  504A               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1034  00FDD0  0AFF               	xorlw	255
  1035  00FDD2  6E4B               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1036  00FDD4  504F               	movf	gpio_pin_direction_initialize@port^0,w,c
  1037  00FDD6  0D02               	mullw	2
  1038  00FDD8  0E15               	movlw	low _tris_register
  1039  00FDDA  24F3               	addwf	243,w,c
  1040  00FDDC  6ED9               	movwf	fsr2l,c
  1041  00FDDE  0E00               	movlw	high _tris_register
  1042  00FDE0  20F4               	addwfc	prodh,w,c
  1043  00FDE2  6EDA               	movwf	fsr2h,c
  1044  00FDE4  CFDE F04C          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1045  00FDE8  CFDD F04D          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1046  00FDEC  C04C  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1047  00FDF0  C04D  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1048  00FDF4  504B               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1049  00FDF6  16DF               	andwf	indf2,f,c
  1050  00FDF8  EF33  F07F         	goto	l150
  1051  00FDFC                     l1403:
  1052                           
  1053                           ;mcal/gpio/mcal_gpio.c: 65:                 (*tris_register[port] |= (1U << pin)); break
      +                          ;
  1054  00FDFC  C047  F049         	movff	gpio_pin_direction_initialize@pin,??_gpio_pin_direction_initialize
  1055  00FE00  0E01               	movlw	1
  1056  00FE02  6E4A               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1057  00FE04  2A49               	incf	??_gpio_pin_direction_initialize^0,f,c
  1058  00FE06  EF07  F07F         	goto	u594
  1059  00FE0A                     u595:
  1060  00FE0A  90D8               	bcf	status,0,c
  1061  00FE0C  364A               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1062  00FE0E                     u594:
  1063  00FE0E  2E49               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1064  00FE10  EF05  F07F         	goto	u595
  1065  00FE14  504F               	movf	gpio_pin_direction_initialize@port^0,w,c
  1066  00FE16  0D02               	mullw	2
  1067  00FE18  0E15               	movlw	low _tris_register
  1068  00FE1A  24F3               	addwf	243,w,c
  1069  00FE1C  6ED9               	movwf	fsr2l,c
  1070  00FE1E  0E00               	movlw	high _tris_register
  1071  00FE20  20F4               	addwfc	prodh,w,c
  1072  00FE22  6EDA               	movwf	fsr2h,c
  1073  00FE24  CFDE F04B          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1074  00FE28  CFDD F04C          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1075  00FE2C  C04B  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1076  00FE30  C04C  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1077  00FE34  504A               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1078  00FE36  12DF               	iorwf	indf2,f,c
  1079  00FE38  EF33  F07F         	goto	l150
  1080  00FE3C                     l1407:
  1081  00FE3C  5048               	movf	gpio_pin_direction_initialize@direction^0,w,c
  1082  00FE3E  6E49               	movwf	??_gpio_pin_direction_initialize^0,c
  1083  00FE40  6A4A               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1084                           
  1085                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1086                           ; Switch size 1, requested type "simple"
  1087                           ; Number of cases is 1, Range of values is 0 to 0
  1088                           ; switch strategies available:
  1089                           ; Name         Instructions Cycles
  1090                           ; simple_byte            4     3 (average)
  1091                           ;	Chosen strategy is simple_byte
  1092  00FE42  504A               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1093  00FE44  0A00               	xorlw	0	; case 0
  1094  00FE46  B4D8               	btfsc	status,2,c
  1095  00FE48  EF28  F07F         	goto	l1655
  1096  00FE4C  EF33  F07F         	goto	l150
  1097  00FE50                     l1655:
  1098                           
  1099                           ; Switch size 1, requested type "simple"
  1100                           ; Number of cases is 2, Range of values is 0 to 1
  1101                           ; switch strategies available:
  1102                           ; Name         Instructions Cycles
  1103                           ; simple_byte            7     4 (average)
  1104                           ;	Chosen strategy is simple_byte
  1105  00FE50  5049               	movf	??_gpio_pin_direction_initialize^0,w,c
  1106  00FE52  0A00               	xorlw	0	; case 0
  1107  00FE54  B4D8               	btfsc	status,2,c
  1108  00FE56  EFDB  F07E         	goto	l1401
  1109  00FE5A  0A01               	xorlw	1	; case 1
  1110  00FE5C  B4D8               	btfsc	status,2,c
  1111  00FE5E  EFFE  F07E         	goto	l1403
  1112  00FE62  EF33  F07F         	goto	l150
  1113  00FE66                     l150:
  1114  00FE66  0012               	return		;funcret
  1115  00FE68                     __end_of_gpio_pin_direction_initialize:
  1116                           	callstack 0
  1117  0000                     
  1118                           	psect	rparam
  1119  0000                     
  1120                           	psect	idloc
  1121                           
  1122                           ;Config register IDLOC0 @ 0x200000
  1123                           ;	unspecified, using default values
  1124  200000                     	org	2097152
  1125  200000  FF                 	db	255
  1126                           
  1127                           ;Config register IDLOC1 @ 0x200001
  1128                           ;	unspecified, using default values
  1129  200001                     	org	2097153
  1130  200001  FF                 	db	255
  1131                           
  1132                           ;Config register IDLOC2 @ 0x200002
  1133                           ;	unspecified, using default values
  1134  200002                     	org	2097154
  1135  200002  FF                 	db	255
  1136                           
  1137                           ;Config register IDLOC3 @ 0x200003
  1138                           ;	unspecified, using default values
  1139  200003                     	org	2097155
  1140  200003  FF                 	db	255
  1141                           
  1142                           ;Config register IDLOC4 @ 0x200004
  1143                           ;	unspecified, using default values
  1144  200004                     	org	2097156
  1145  200004  FF                 	db	255
  1146                           
  1147                           ;Config register IDLOC5 @ 0x200005
  1148                           ;	unspecified, using default values
  1149  200005                     	org	2097157
  1150  200005  FF                 	db	255
  1151                           
  1152                           ;Config register IDLOC6 @ 0x200006
  1153                           ;	unspecified, using default values
  1154  200006                     	org	2097158
  1155  200006  FF                 	db	255
  1156                           
  1157                           ;Config register IDLOC7 @ 0x200007
  1158                           ;	unspecified, using default values
  1159  200007                     	org	2097159
  1160  200007  FF                 	db	255
  1161                           
  1162                           	psect	config
  1163                           
  1164                           ; Padding undefined space
  1165  300000                     	org	3145728
  1166  300000  FF                 	db	255
  1167                           
  1168                           ;Config register CONFIG1H @ 0x300001
  1169                           ;	Oscillator Selection bits
  1170                           ;	FOSC = RCIO6, External RC oscillator, port function on RA6
  1171                           ;	Fail-Safe Clock Monitor Enable bit
  1172                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1173                           ;	Internal/External Oscillator Switchover bit
  1174                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1175  300001                     	org	3145729
  1176  300001  07                 	db	7
  1177                           
  1178                           ;Config register CONFIG2L @ 0x300002
  1179                           ;	Power-up Timer Enable bit
  1180                           ;	PWRT = OFF, PWRT disabled
  1181                           ;	Brown-out Reset Enable bits
  1182                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1183                           ;	Brown Out Reset Voltage bits
  1184                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1185  300002                     	org	3145730
  1186  300002  1F                 	db	31
  1187                           
  1188                           ;Config register CONFIG2H @ 0x300003
  1189                           ;	Watchdog Timer Enable bit
  1190                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  1191                           ;	Watchdog Timer Postscale Select bits
  1192                           ;	WDTPS = 32768, 1:32768
  1193  300003                     	org	3145731
  1194  300003  1F                 	db	31
  1195                           
  1196                           ; Padding undefined space
  1197  300004                     	org	3145732
  1198  300004  FF                 	db	255
  1199                           
  1200                           ;Config register CONFIG3H @ 0x300005
  1201                           ;	CCP2 MUX bit
  1202                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1203                           ;	PORTB A/D Enable bit
  1204                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1205                           ;	Low-Power Timer1 Oscillator Enable bit
  1206                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1207                           ;	HFINTOSC Fast Start-up
  1208                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1209                           ;	MCLR Pin Enable bit
  1210                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1211  300005                     	org	3145733
  1212  300005  8B                 	db	139
  1213                           
  1214                           ;Config register CONFIG4L @ 0x300006
  1215                           ;	Stack Full/Underflow Reset Enable bit
  1216                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1217                           ;	Single-Supply ICSP Enable bit
  1218                           ;	LVP = ON, Single-Supply ICSP enabled
  1219                           ;	Extended Instruction Set Enable bit
  1220                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1221                           ;	Background Debugger Enable bit
  1222                           ;	DEBUG = 0x1, unprogrammed default
  1223  300006                     	org	3145734
  1224  300006  85                 	db	133
  1225                           
  1226                           ; Padding undefined space
  1227  300007                     	org	3145735
  1228  300007  FF                 	db	255
  1229                           
  1230                           ;Config register CONFIG5L @ 0x300008
  1231                           ;	Code Protection Block 0
  1232                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1233                           ;	Code Protection Block 1
  1234                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1235                           ;	Code Protection Block 2
  1236                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1237                           ;	Code Protection Block 3
  1238                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1239  300008                     	org	3145736
  1240  300008  0F                 	db	15
  1241                           
  1242                           ;Config register CONFIG5H @ 0x300009
  1243                           ;	Boot Block Code Protection bit
  1244                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1245                           ;	Data EEPROM Code Protection bit
  1246                           ;	CPD = OFF, Data EEPROM not code-protected
  1247  300009                     	org	3145737
  1248  300009  C0                 	db	192
  1249                           
  1250                           ;Config register CONFIG6L @ 0x30000A
  1251                           ;	Write Protection Block 0
  1252                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1253                           ;	Write Protection Block 1
  1254                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1255                           ;	Write Protection Block 2
  1256                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1257                           ;	Write Protection Block 3
  1258                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1259  30000A                     	org	3145738
  1260  30000A  0F                 	db	15
  1261                           
  1262                           ;Config register CONFIG6H @ 0x30000B
  1263                           ;	Configuration Register Write Protection bit
  1264                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1265                           ;	Boot Block Write Protection bit
  1266                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1267                           ;	Data EEPROM Write Protection bit
  1268                           ;	WRTD = OFF, Data EEPROM not write-protected
  1269  30000B                     	org	3145739
  1270  30000B  E0                 	db	224
  1271                           
  1272                           ;Config register CONFIG7L @ 0x30000C
  1273                           ;	Table Read Protection Block 0
  1274                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1275                           ;	Table Read Protection Block 1
  1276                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1277                           ;	Table Read Protection Block 2
  1278                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1279                           ;	Table Read Protection Block 3
  1280                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1281  30000C                     	org	3145740
  1282  30000C  0F                 	db	15
  1283                           
  1284                           ;Config register CONFIG7H @ 0x30000D
  1285                           ;	Boot Block Table Read Protection bit
  1286                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1287  30000D                     	org	3145741
  1288  30000D  40                 	db	64
  1289                           tosu	equ	0xFFF
  1290                           tosh	equ	0xFFE
  1291                           tosl	equ	0xFFD
  1292                           stkptr	equ	0xFFC
  1293                           pclatu	equ	0xFFB
  1294                           pclath	equ	0xFFA
  1295                           pcl	equ	0xFF9
  1296                           tblptru	equ	0xFF8
  1297                           tblptrh	equ	0xFF7
  1298                           tblptrl	equ	0xFF6
  1299                           tablat	equ	0xFF5
  1300                           prodh	equ	0xFF4
  1301                           prodl	equ	0xFF3
  1302                           indf0	equ	0xFEF
  1303                           postinc0	equ	0xFEE
  1304                           postdec0	equ	0xFED
  1305                           preinc0	equ	0xFEC
  1306                           plusw0	equ	0xFEB
  1307                           fsr0h	equ	0xFEA
  1308                           fsr0l	equ	0xFE9
  1309                           wreg	equ	0xFE8
  1310                           indf1	equ	0xFE7
  1311                           postinc1	equ	0xFE6
  1312                           postdec1	equ	0xFE5
  1313                           preinc1	equ	0xFE4
  1314                           plusw1	equ	0xFE3
  1315                           fsr1h	equ	0xFE2
  1316                           fsr1l	equ	0xFE1
  1317                           bsr	equ	0xFE0
  1318                           indf2	equ	0xFDF
  1319                           postinc2	equ	0xFDE
  1320                           postdec2	equ	0xFDD
  1321                           preinc2	equ	0xFDC
  1322                           plusw2	equ	0xFDB
  1323                           fsr2h	equ	0xFDA
  1324                           fsr2l	equ	0xFD9
  1325                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        70
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      93
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    perform_led_seq@led_pat	PTR unsigned char [8] size(2) Largest target is 32
		 -> led_seq(COMRAM[32]), 

    perform_led_seq@led_arr	PTR struct . size(2) Largest target is 8
		 -> led_array(COMRAM[8]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 

    led_turn_off@led	PTR struct . size(2) Largest target is 8
		 -> led_array(COMRAM[8]), 

    led_turn_on@led	PTR struct . size(2) Largest target is 8
		 -> led_array(COMRAM[8]), 

    led_initalize@led	PTR struct . size(2) Largest target is 8
		 -> led_array(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_perform_led_seq
    _perform_led_seq->_led_initalize
    _perform_led_seq->_led_turn_off
    _perform_led_seq->_led_turn_on
    _led_turn_on->_gpio_pin_write_value
    _led_turn_off->_gpio_pin_write_value
    _led_initalize->_gpio_pin_direction_initialize
    _led_initalize->_gpio_pin_write_value

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5032
                    _perform_led_seq
 ---------------------------------------------------------------------------------
 (1) _perform_led_seq                                     10     5      5    5032
                                             13 COMRAM    10     5      5
                      _led_initalize
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (2) _led_turn_on                                          4     2      2    1281
                                              9 COMRAM     4     2      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (2) _led_turn_off                                         4     2      2    1281
                                              9 COMRAM     4     2      2
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (2) _led_initalize                                        4     2      2    1904
                                              9 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_value
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_value                                 9     7      2    1059
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        9     7      2     601
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _perform_led_seq
     _led_initalize
       _gpio_pin_direction_initialize
       _gpio_pin_write_value
     _led_turn_off
       _gpio_pin_write_value
     _led_turn_on
       _gpio_pin_write_value

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      5D       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      32        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 01 15:03:11 2021

                                    l70 FC86                                      l63 FD06  
                                    l56 FD9E                                     l150 FE66  
                                   l241 FFEC                                     l253 FB78  
                                   l248 FFFE                                     l169 FF2E  
                                   u600 FE7A                                     u601 FE76  
                                   u700 FC38                                     u701 FC34  
                                   u614 FE90                                     u630 FD1A  
                                   u710 FC56                                     u615 FE8C  
                                   u631 FD16                                     u711 FC52  
                                   u624 FED6                                     u640 FD38  
                                   u720 FF60                                     u625 FED2  
                                   u641 FD34                                     u721 FF5C  
                                   u570 FDB2                                     u650 FD56  
                                   u730 FF9C                                     u571 FDAE  
                                   u651 FD52                                     u731 FF98  
                                   u660 FC9A                                     u740 FFD2  
                                   u661 FC96                                     u741 FFCE  
                                   u670 FCB8                                     u750 FFFE  
                                   u671 FCB4                                     u751 FFFA  
                                   u584 FDC8                                     u680 FCD6  
                                   u585 FDC4                                     u681 FCD2  
                                   u594 FE0E                                     u690 FC1A  
                                   u595 FE0A                                     u691 FC16  
                                   u927 FFDC                                     prod 000FF3  
                                   wreg 000FE8                            ?_led_turn_on 0050  
                                  l1401 FDB6                                    l1403 FDFC  
                                  l1421 FE7E                                    l1413 FE6A  
                                  l1407 FE3C                                    l1423 FEC0  
                                  l1431 FF04                                    l1415 FE6A  
                                  l1511 FFC0                                    l1425 FEC4  
                                  l1441 FD1A                                    l1513 FFC2  
                                  l1505 FF6C                                    l1443 FD38  
                                  l1515 FFD2                                    l1507 FF9C  
                                  l1437 FD08                                    l1453 FC88  
                                  l1517 FFEA                                    l1509 FFB0  
                                  l1447 FD5A                                    l1439 FD08  
                                  l1471 FC08                                    l1463 FCDA  
                                  l1455 FC88                                    l1393 FDA2  
                                  l1449 FD9E                                    l1481 FC5A  
                                  l1473 FC08                                    l1465 FCFC  
                                  l1457 FC9A                                    l1395 FDA2  
                                  l1483 FC7C                                    l1475 FC1A  
                                  l1467 FD06                                    l1459 FCB8  
                                  l1491 FF3C                                    l1643 FB78  
                                  l1653 FF18                                    l1485 FC86  
                                  l1477 FC38                                    l1493 FF4C  
                                  l1655 FE50                                    l1495 FF4E  
                                  l1497 FF60                                    l1489 FF30  
                                  l1499 FF68                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                                  _LATD 000F8C                                    _LATE 000F8D  
                                  _main FB78                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                        ?_led_initalize 0050                           ?_led_turn_off 0050  
                          ___param_bank 000000       gpio_pin_direction_initialize@port 004F  
                  _gpio_pin_write_value FE68                                   ?_main 0047  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _PORTD 000F83  
                                 _PORTE 000F84                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                                 _TRISD 000F95                                   _TRISE 000F96  
                                 tablat 000FF5                        led_initalize@led 0050  
                                 status 000FD8                          ??_led_turn_off 0052  
                     ??_perform_led_seq 0059          ?_gpio_pin_direction_initialize 0047  
                       __initialization FB98                            __end_of_main FB98  
                 ?_gpio_pin_write_value 0047                                  ??_main 005E  
                         __activetblptr 000002                         ??_led_initalize 0052  
                         _tris_register 0015                  perform_led_seq@led_arr 0054  
                perform_led_seq@led_pat 0056                  perform_led_seq@seq_len 0058  
                          __pdataCOMRAM 0001                                  tblptrh 000FF7  
                                tblptrl 000FF6                                  tblptru 000FF8  
                  __size_of_led_turn_on 0080                              __accesstop 0060  
               __end_of__initialization FBB8                           ___rparam_used 000001  
                        __pcstackCOMRAM 0047                  ??_gpio_pin_write_value 0049  
                  __end_of_led_turn_off FC88            perform_led_seq@l_led_counter 005C  
                       _perform_led_seq FF30                                 __Hparam 0000  
                               __Lparam 0000                                 __pcinit FB98  
                               __ramtop 1000                                 __ptext0 FB78  
                               __ptext1 FF30                                 __ptext2 FC88  
                               __ptext3 FC08                                 __ptext4 FD08  
                               __ptext5 FE68                                 __ptext6 FDA0  
                               _led_seq 001F         ??_gpio_pin_direction_initialize 0049  
                  end_of_initialization FBB8                           __Lmediumconst 0000  
                               postdec1 000FE5                                 postdec2 000FDD  
                               postinc0 000FEE                                 postinc2 000FDE  
                 __size_of_led_turn_off 0080                 __end_of_perform_led_seq 0000  
                 __end_of_led_initalize FDA0                            _led_turn_off FC08  
gpio_pin_direction_initialize@direction 0048                           __pidataCOMRAM FBC2  
                   start_initialization FB98                           ??_led_turn_on 0052  
 __end_of_gpio_pin_direction_initialize FE68  __size_of_gpio_pin_direction_initialize 00C8  
         _gpio_pin_direction_initialize FDA0                            _lat_register 000B  
                       led_turn_off@led 0050                gpio_pin_write_value@port 004F  
         __size_of_gpio_pin_write_value 00C8                        ?_perform_led_seq 0054  
                   __end_of_led_turn_on FD08                               _led_array 003F  
      gpio_pin_direction_initialize@pin 0047                             _led_turn_on FC88  
                             copy_data0 FBAC               gpio_pin_write_value@logic 0048  
              perform_led_seq@l_led_pos 005D                          led_turn_on@led 0050  
                              __Hrparam 0000                 gpio_pin_write_value@pin 0047  
                              __Lrparam 0000                           __size_of_main 0020  
                __size_of_led_initalize 0098            __end_of_gpio_pin_write_value FF30  
              __size_of_perform_led_seq 00D0                           _port_register 0001  
                         _led_initalize FD08  
